<?xml version='1.0' encoding='utf-8'?>
<graphml xmlns="http://graphml.graphdrawing.org/xmlns" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://graphml.graphdrawing.org/xmlns http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd">
  <key attr.name="score" attr.type="double" for="edge" id="d18" />
  <key attr.name="type" attr.type="string" for="edge" id="d17" />
  <key attr.name="view_count" attr.type="long" for="node" id="d16" />
  <key attr.name="title" attr.type="string" for="node" id="d15" />
  <key attr.name="averageWordLength" attr.type="long" for="node" id="d14" />
  <key attr.name="sentiment" attr.type="string" for="node" id="d13" />
  <key attr.name="sentiment_score" attr.type="double" for="node" id="d12" />
  <key attr.name="readingLevel" attr.type="double" for="node" id="d11" />
  <key attr.name="quotedTextPerLength" attr.type="double" for="node" id="d10" />
  <key attr.name="averageWordLength" attr.type="double" for="node" id="d9" />
  <key attr.name="length" attr.type="long" for="node" id="d8" />
  <key attr.name="body" attr.type="string" for="node" id="d7" />
  <key attr.name="timestamp" attr.type="double" for="node" id="d6" />
  <key attr.name="score" attr.type="long" for="node" id="d5" />
  <key attr.name="author" attr.type="string" for="node" id="d4" />
  <key attr.name="id" attr.type="string" for="node" id="d3" />
  <key attr.name="parent_id" attr.type="string" for="node" id="d2" />
  <key attr.name="id_0" attr.type="string" for="node" id="d1" />
  <key attr.name="name" attr.type="string" for="node" id="d0" />
  <graph edgedefault="undirected">
    <node id="c0">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hf9ch</data>
      <data key="d3">e6bfezm</data>
      <data key="d4">theblacklounge</data>
      <data key="d5">2</data>
      <data key="d6">1537480859.0</data>
      <data key="d7">You can't do that. You can use a topic models to check whether the content of the article still matches, but that's about it. You can't check whether they say the same thing. 

But this is not just an NLP task, it's heuristics. Fake news comes from similar sources, and uses similar language. It's also not spin, spin isn't fake and most fake news doesn't even try to spin. It's completely made up often, or based on old and unrelated articles. Look for keywords on the site, not just the article. Check the category titles. Check the site's ranking on Google, check the ranking of the links inside. Check the date of the sources. Check the ads on the news sites...</data>
      <data key="d8">665</data>
      <data key="d9">6.562</data>
      <data key="d10">0.0</data>
      <data key="d11">3.7</data>
      <data key="d12">0.0124</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c1">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bfezm</data>
      <data key="d3">e6bfl03</data>
      <data key="d4">GhostFoxGod</data>
      <data key="d5">1</data>
      <data key="d6">1537481011.0</data>
      <data key="d7">Ok so instead of matching whole article, is there any way to compare only title of the article? For example : 'Trump will support China' and 'China will get some help from Trump' so these two headings are same. So is there any way to check if they both are same?</data>
      <data key="d8">262</data>
      <data key="d9">5.486</data>
      <data key="d10">0.0</data>
      <data key="d11">6.3</data>
      <data key="d12">0.3186</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c2">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hf9ch</data>
      <data key="d3">e6bz8in</data>
      <data key="d4">WhackAMoleE</data>
      <data key="d5">1</data>
      <data key="d6">1537497241.0</data>
      <data key="d7">Here's the classic case to test your design on.

During the run up to the Iraq war in 2002, the New York Times ran a series of articles by Judith Miller claiming that Saddam had yellowcake uranium and aluminum tubes to build WMDs. Turned out this was a neocon lie, 100% fake news to start a war. 

But hey, it's the New York Times, right? So your algorithm or method should be able to identify fake news not only in the National Enquirer, but in the "paper of record," the New York Times, which is the world's greatest purveyor of fake news. How many wars has the National Enquirer lied us into?</data>
      <data key="d8">595</data>
      <data key="d9">5.886</data>
      <data key="d10">0.0286</data>
      <data key="d11">7.0</data>
      <data key="d12">-0.3287</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c3">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bz8in</data>
      <data key="d3">e6c2w4j</data>
      <data key="d4">theblacklounge</data>
      <data key="d5">1</data>
      <data key="d6">1537500277.0</data>
      <data key="d7">That was real news about lies. The reporting was sincere, without any real way to disprove it, and no real reason for more distrust than any other news coming from US intelligence at the time. Now, real news might not always be sincere, but fake news never is. </data>
      <data key="d8">261</data>
      <data key="d9">5.282</data>
      <data key="d10">0.0</data>
      <data key="d11">7.2</data>
      <data key="d12">-0.33</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c4">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bfl03</data>
      <data key="d3">e6bg0jp</data>
      <data key="d4">theblacklounge</data>
      <data key="d5">1</data>
      <data key="d6">1537481393.0</data>
      <data key="d7">I edited with more concrete ideas. 

Yes you can match those with a topic model. You can find pretrained ones, and libraries build around those. They will find similarity between "support" and "help". However, it would also just match "China will support Trump" and "Trump won't support China". Topic models can help you match topics, not messages. </data>
      <data key="d8">349</data>
      <data key="d9">6.659</data>
      <data key="d10">0.1834</data>
      <data key="d11">4.6</data>
      <data key="d12">0.2439</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c5">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hj204</data>
      <data key="d3">e6cds2n</data>
      <data key="d4">DarthSanity</data>
      <data key="d5">3</data>
      <data key="d6">1537509491.0</data>
      <data key="d7">Calculus and computer science are old friends from a computational standpoint, since the advent of computers. Military and scientific calculations, mostly, such as in the calculation of artillery and torpedo solutions.

The most ubiquitous integral relationship in our society are related to distance/velocity/acceleration. Velocity (mph or mph) is a derivative of distance (miles or kilometers) and acceleration (mph^2 or kph^2) is a derivative of velocity. So automotive systems use calculus when displaying results to the driver. Aerospace navigation systems use partial differentials - velocities in the x, y and z plane. So calculus is everwhere in the many embedded systems present in our society.

IT on the other hand is tied to business processes and solutions, most of which do not require calculus. There are a class of problems in economics, though, that use a form of business calculus to estimate trends in micro- and macro-economics. Calculus also shows up in analytics systems. This is mainly the realm of financial industries.

Does calculus show up at the local Walmart or insurance company? Yes - Walmart will use calculus to estimate trends in product sales so they know how much to order for next time. Calculus also shows up in actuarial tables, using all the factors you check off in the questionnaire you answer to estimate how long you have to live, or how likely you’ll get into an accident.

Make sense?</data>
      <data key="d8">1430</data>
      <data key="d9">8.105</data>
      <data key="d10">0.0</data>
      <data key="d11">10.9</data>
      <data key="d12">0.0518</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c6">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6cds2n</data>
      <data key="d3">e6ce1vs</data>
      <data key="d4">bach2o</data>
      <data key="d5">2</data>
      <data key="d6">1537509736.0</data>
      <data key="d7">I appreciate your reply. Thank you so much!</data>
      <data key="d8">43</data>
      <data key="d9">4.25</data>
      <data key="d10">0.0</data>
      <data key="d11">3.7</data>
      <data key="d12">0.4109</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c7">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hihme</data>
      <data key="d3">e6c5xif</data>
      <data key="d4">SpecialCustard</data>
      <data key="d5">1</data>
      <data key="d6">1537502768.0</data>
      <data key="d7">GitHub </data>
      <data key="d8">7</data>
      <data key="d14">6</data>
      <data key="d10">0.0</data>
      <data key="d11">8.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c8">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c5xif</data>
      <data key="d3">e6cjqt7</data>
      <data key="d4">fakefactfrank</data>
      <data key="d5">1</data>
      <data key="d6">1537515197.0</data>
      <data key="d7">Free private repositories, among other goodies, is awesome!</data>
      <data key="d8">59</data>
      <data key="d9">6.125</data>
      <data key="d10">0.0</data>
      <data key="d11">10.0</data>
      <data key="d12">0.8268</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c9">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hhebf</data>
      <data key="d3">e6bytqu</data>
      <data key="d4">mrexodia</data>
      <data key="d5">1</data>
      <data key="d6">1537496900.0</data>
      <data key="d7">You can always encode truth tables as a logic circuit (although this isn’t usually the most efficient implementation). In this example, name the inputs a, b, c and then do the following for every column that has outcome 1 (every 1 corresponds to the variable and every 0 to ~variable):

(~a &amp; ~b &amp; c) | (a &amp; ~b &amp; ~c) | (a &amp; ~b &amp; c) | (a &amp; b &amp; ~c)

You can then convert this to a (terrible) circuit manually. You can also ask wolfram alpha to do it for you: http://m.wolframalpha.com/input/?i=%28%7Ea+%26+%7Eb+%26+c%29+%7C+%28a+%26+%7Eb+%26+%7Ec%29+%7C+%28a+%26+%7Eb+%26+c%29+%7C+%28a+%26+b+%26+%7Ec%29</data>
      <data key="d8">601</data>
      <data key="d14">9</data>
      <data key="d10">0.0</data>
      <data key="d11">15.4</data>
      <data key="d12">0.2197</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c10">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bytqu</data>
      <data key="d3">e6bz1pz</data>
      <data key="d4">emotionalmugger</data>
      <data key="d5">1</data>
      <data key="d6">1537497083.0</data>
      <data key="d7">Thank you, this was very helpful.</data>
      <data key="d8">33</data>
      <data key="d9">4.333</data>
      <data key="d10">0.0</data>
      <data key="d11">0.9</data>
      <data key="d12">0.6801</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c11">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h9dwo</data>
      <data key="d3">e6a8c5o</data>
      <data key="d4">ghedipunk</data>
      <data key="d5">7</data>
      <data key="d6">1537425059.0</data>
      <data key="d7">A single, uncompressed bitmap of a 1920x1080 screenshot in true color (32bpp) mode would take up, on average, 0.004 square inches on the latest generation of consumer hard drives that have a density of 1.34 Tbit/in2.  


Converting that bitmap to a .png file, in the case of my own desktop in an experiment I did while writing this, decreases this size to about 0.00000003 square inches.  (My screen has a LOT of same color space, so compresses down quite far.)</data>
      <data key="d8">461</data>
      <data key="d9">5.656</data>
      <data key="d10">0.0</data>
      <data key="d11">6.1</data>
      <data key="d12">0.0843</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c12">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a8c5o</data>
      <data key="d3">e6bkmu1</data>
      <data key="d4">HelenKellersBhole</data>
      <data key="d5">0</data>
      <data key="d6">1537485318.0</data>
      <data key="d7">Thank you, this is exactly the answer I was looking for!</data>
      <data key="d8">56</data>
      <data key="d14">4</data>
      <data key="d10">0.0</data>
      <data key="d11">5.2</data>
      <data key="d12">0.4199</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c13">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h9dwo</data>
      <data key="d3">e6a5xoy</data>
      <data key="d4">nerdshark</data>
      <data key="d5">3</data>
      <data key="d6">1537422828.0</data>
      <data key="d7">That's impossible to answer completely without knowing the specifics of the drive the image is being stored on. But in general, the bits would be so densely packed together you wouldn't be able to see them without a microscope.</data>
      <data key="d8">227</data>
      <data key="d9">5.636</data>
      <data key="d10">0.0</data>
      <data key="d11">9.7</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c14">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a5xoy</data>
      <data key="d3">e6ack4a</data>
      <data key="d4">wtallis</data>
      <data key="d5">5</data>
      <data key="d6">1537429115.0</data>
      <data key="d7">&gt; But in general, the bits would be so densely packed together you wouldn't be able to see them without a microscope.

More accurately: you wouldn't be able to discern an object the size of the area that much data would occupy on the hard drive. Regardless of file size and storage density, your eyes can't see magnetic fields and thus you cannot see the actual bits of data on a hard drive of any vintage/capacity.

Data stored on optical discs (CDs, DVDs, Blu-ray) can be inspected by microscope. There are also some ROM chips that can be opened up and the data can be optically imaged, which has occasionally been used when reverse-engineering old technology.</data>
      <data key="d8">662</data>
      <data key="d9">6.625</data>
      <data key="d10">0.0</data>
      <data key="d11">11.1</data>
      <data key="d12">-0.0411</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c15">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hhk3n</data>
      <data key="d3">e6byes5</data>
      <data key="d4">umib0zu</data>
      <data key="d5">46</data>
      <data key="d6">1537496553.0</data>
      <data key="d7">Letter/word similarity? Sure. Use tf-idf vectors from your entire set of corpus sentences and do the cosine similarity of the tf-idf vectors. Semantic similarity? /r/LanguageTechnology /r/linguistics and get ready for a PhD.

&amp;#x200B;

All these sentences are Letter/word similar. I think you're looking for semantic similarity and that's a hard problem.</data>
      <data key="d8">354</data>
      <data key="d9">7.05</data>
      <data key="d10">0.0</data>
      <data key="d11">10.6</data>
      <data key="d12">0.0437</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c16">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6byes5</data>
      <data key="d3">e6ci1as</data>
      <data key="d4">grasseffect</data>
      <data key="d5">2</data>
      <data key="d6">1537513512.0</data>
      <data key="d7">This is the correct answer. </data>
      <data key="d8">28</data>
      <data key="d9">4.4</data>
      <data key="d10">0.0</data>
      <data key="d11">5.2</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c17">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hhk3n</data>
      <data key="d3">e6c3oaw</data>
      <data key="d4">MirrorLake</data>
      <data key="d5">2</data>
      <data key="d6">1537500920.0</data>
      <data key="d7">Based on your example, I still don’t really know what you mean by “similar”. They all sound like very similar sentences to me.</data>
      <data key="d8">126</data>
      <data key="d9">3.885</data>
      <data key="d10">0.0</data>
      <data key="d11">5.4</data>
      <data key="d12">0.2275</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c18">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c3oaw</data>
      <data key="d3">e6c3rx4</data>
      <data key="d4">GhostFoxGod</data>
      <data key="d5">1</data>
      <data key="d6">1537501006.0</data>
      <data key="d7">Trump will help China and Chinal will not get any help from Trump.. These might sound similiar but are different in meaning
</data>
      <data key="d8">124</data>
      <data key="d9">5.1</data>
      <data key="d10">0.0</data>
      <data key="d11">5.2</data>
      <data key="d12">0.6597</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c19">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c3rx4</data>
      <data key="d3">e6cghv5</data>
      <data key="d4">FliesMoreCeilings</data>
      <data key="d5">1</data>
      <data key="d6">1537512000.0</data>
      <data key="d7">In your example you first said S1,S2 and S3 are similar. Did you mean S4 instead of S3? 

It's also not very clear what degree of difference you're looking for and what kind of data you're working with. S4 also seems to carry a different meaning than S1 and S2 to me, should the software see that? Should it see that they're similar? Does the software also need to catch that sentences such as these are all different:

- Madrid is the capital of Spain
- Paris is the capital of France
- Madrid is the capital of France
- Madrid is a city in Spain
- People live in Madrid
- Madrid capital Madrid is</data>
      <data key="d8">598</data>
      <data key="d9">7.061</data>
      <data key="d10">0.0</data>
      <data key="d11">6.9</data>
      <data key="d12">-0.068</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c20">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hhp2v</data>
      <data key="d3">e6c2cwl</data>
      <data key="d4">dataisthething</data>
      <data key="d5">1</data>
      <data key="d6">1537499835.0</data>
      <data key="d7">You are doing an M.S.? And presenting your thesis project?</data>
      <data key="d8">58</data>
      <data key="d9">4.091</data>
      <data key="d10">0.0</data>
      <data key="d11">2.9</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c21">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c2cwl</data>
      <data key="d3">e6c2ftj</data>
      <data key="d4">GhostFoxGod</data>
      <data key="d5">0</data>
      <data key="d6">1537499901.0</data>
      <data key="d7">I am from India and doing M.tech known as master of technology </data>
      <data key="d8">63</data>
      <data key="d9">4.25</data>
      <data key="d10">0.0</data>
      <data key="d11">5.6</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c22">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c2ftj</data>
      <data key="d3">e6c7364</data>
      <data key="d4">dataisthething</data>
      <data key="d5">4</data>
      <data key="d6">1537503731.0</data>
      <data key="d7">So basically you just haven’t done your work and now you are asking the internet for help?</data>
      <data key="d8">90</data>
      <data key="d9">4.056</data>
      <data key="d10">0.0</data>
      <data key="d11">7.6</data>
      <data key="d12">0.4019</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c23">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hf0to</data>
      <data key="d3">e6bjay9</data>
      <data key="d4">tfofurn</data>
      <data key="d5">7</data>
      <data key="d6">1537484214.0</data>
      <data key="d7">I haven't listened to any of these; I'm just providing links to podcasts mentioned in other comments for folks on mobile.

* [Coding Blocks](https://www.codingblocks.net/)
* [Test and Code](http://testandcode.com/) (appears to be Python-specific)
* [Talk Python To [sic] Me](https://talkpython.fm/)
* [podcast.\_\_init\_\_](https://www.podcastinit.com/) (Python)
* [Javascript Jabber](https://devchat.tv/js-jabber/) (part of a larger  network of programming podcasts: [Devchat.tv](https://devchat.tv/))
* [Ruby Rogues](https://devchat.tv/ruby-rogues/) (also Devchat.tv)

edit: rouges -&gt; rogues
</data>
      <data key="d8">594</data>
      <data key="d9">8.298</data>
      <data key="d10">0.0</data>
      <data key="d11">10.7</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c24">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bjay9</data>
      <data key="d3">e6bkska</data>
      <data key="d4">Sqeaky</data>
      <data key="d5">2</data>
      <data key="d6">1537485449.0</data>
      <data key="d7">When I was professionally doing Ruby I listened to the Ruby rogues. They were good, but it was a practical focused podcast. Less computer science more making Ruby code work.

I like CppCast now. It too has a practical focus they dip into computer science ideas more often. Also, programming throwdown is good.</data>
      <data key="d8">309</data>
      <data key="d9">5.905</data>
      <data key="d10">0.0</data>
      <data key="d11">6.7</data>
      <data key="d12">0.2426</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c25">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9hf0to</data>
      <data key="d3">e6bmnnr</data>
      <data key="d4">Isvara</data>
      <data key="d5">1</data>
      <data key="d6">1537486971.0</data>
      <data key="d7">There's computer science gossip?</data>
      <data key="d8">32</data>
      <data key="d14">7</data>
      <data key="d10">0.0</data>
      <data key="d11">9.6</data>
      <data key="d12">-0.1779</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c26">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bmnnr</data>
      <data key="d3">e6bq1gl</data>
      <data key="d4">tfofurn</data>
      <data key="d5">1</data>
      <data key="d6">1537489721.0</data>
      <data key="d7">I'm sure there's something about the ongoing mischief caused by the Traveling Salesman as he's crossing the Bridges of Königsberg.</data>
      <data key="d8">130</data>
      <data key="d9">6.111</data>
      <data key="d10">0.0</data>
      <data key="d11">9.9</data>
      <data key="d12">-0.0516</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c27">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a1kvr</data>
      <data key="d4">clownshoesrock</data>
      <data key="d5">316</data>
      <data key="d6">1537419108.0</data>
      <data key="d7">It's almost too intuitive for me to explain..

But think of the counter-consequences.

If a computer could simulate itself faster than it could run, then you could run a faster simulator inside the simulator, and in turn have an ever increasing speedup.

Anyway, the simulator has to do things like fetch memory, but fetching the memory in simulator always takes as long as doing all the prep work in the simulator, then doing a memory fetch in hardware equivalent to what is being simulated..  So basically every thing you do has to be done in hardware anyway, but with more overhead on everything
</data>
      <data key="d8">599</data>
      <data key="d9">6.817</data>
      <data key="d10">0.0</data>
      <data key="d11">11.3</data>
      <data key="d12">0.0475</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c28">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6a3hx5</data>
      <data key="d4">loamfarer</data>
      <data key="d5">26</data>
      <data key="d6">1537420687.0</data>
      <data key="d7">Yeah, its a claim that relates more to engineering and practical realities / measurements. Computation theory describes a sequence of concrete ordered steps that could be instantaneous for all that is cared about. Under which a program that never halts will run forever, but if it halts it's result can be considered instantaneous as far as the model goes. Sometimes a step is given a unit of measurement, but its usually only put in terms of time to emphasis a point in a specific example.</data>
      <data key="d8">490</data>
      <data key="d9">6.219</data>
      <data key="d10">0.0</data>
      <data key="d11">11.5</data>
      <data key="d12">0.1794</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c29">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6al5vq</data>
      <data key="d4">bloatedfrog</data>
      <data key="d5">15</data>
      <data key="d6">1537437561.0</data>
      <data key="d7">It’s like physics, a force can only return a force of equal or lesser strength. </data>
      <data key="d8">80</data>
      <data key="d9">4.2</data>
      <data key="d10">0.0</data>
      <data key="d11">5.6</data>
      <data key="d12">0.6908</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c30">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6ardux</data>
      <data key="d4">bo0mb0om</data>
      <data key="d5">3</data>
      <data key="d6">1537444019.0</data>
      <data key="d7">Yeah, the positive feedback analogy nails it. At best you can have equal performance.</data>
      <data key="d8">85</data>
      <data key="d9">4.929</data>
      <data key="d10">0.0</data>
      <data key="d11">4.8</data>
      <data key="d12">0.6686</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c31">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6aonk6</data>
      <data key="d4">ThePeskyWabbit</data>
      <data key="d5">1</data>
      <data key="d6">1537441077.0</data>
      <data key="d7">nested simulators that each run faster than the last. why are we even using super computers?!</data>
      <data key="d8">93</data>
      <data key="d9">4.688</data>
      <data key="d10">0.0</data>
      <data key="d11">5.2</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c32">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6cnkll</data>
      <data key="d4">t_bptm</data>
      <data key="d5">1</data>
      <data key="d6">1537519026.0</data>
      <data key="d7">The phrase "must always" is too strong. The simulation will in general be slower, but there are situations where an optimizing simulation could exploit a lack of compression for programs which would gain enough time to precede the actual computers runtime. Though for these cases case you gain less for each level of depth (likely extremely) bringing it back to slower again with multiple depth simulation, so the logic of infinite depth'd speedup doesn't really apply. But if you are talking about in general, then sure.. I guess it depends on what level you are considering as faster, but I would hardly ever assume simulation means 1-&gt;1 mapping of instructions executed if there are optimizations to be made.

It's a very similar idea to the theory of compression as well, if you are simulating random instructions- sure, there is nothing that can help you. But if this isn't the case (which it probably isn't) you have a chance of executing faster for 1 layer of depth (and maybe 2 or more) if you have the right conditions and a good implementation. Just as you can run gzip once or twice on a file and see improvements..</data>
      <data key="d8">1126</data>
      <data key="d9">7.214</data>
      <data key="d10">0.0107</data>
      <data key="d11">11.7</data>
      <data key="d12">0.4119</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c33">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6a47fr</data>
      <data key="d4">SuperGameTheory</data>
      <data key="d5">-15</data>
      <data key="d6">1537421301.0</data>
      <data key="d7">I don’t know if the argument is/was at all valid, but one time I was high and realized this, then I took it one toke further and argued that we could never really realize or appreciate the actual underlying mechanics of reality (or the reality from which our reality springs) because we’d need tools/measurements/math that were native to the underlying reality for the models. In other words, our current instruments and math are derived from the physical world, and so they’d essentially be unequipped to deal with the reality that they themselves are made of. Or something like that. Also, something about how our brains are computers within the computers of physical reality, which are in the computers of their more basic reality...all the way down.

I was high.</data>
      <data key="d8">766</data>
      <data key="d9">7.057</data>
      <data key="d10">0.0</data>
      <data key="d11">11.7</data>
      <data key="d12">0.0694</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c34">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6am7b7</data>
      <data key="d4">c3534l</data>
      <data key="d5">1</data>
      <data key="d6">1537438602.0</data>
      <data key="d7">But what about the case where the simulation speed is equal to the computer speed? If all the computer does is simulate itself or if its output is zero, the simulation speed and computing speed are equal.</data>
      <data key="d8">204</data>
      <data key="d9">6.6</data>
      <data key="d10">0.0</data>
      <data key="d11">9.3</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c35">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6a9sq2</data>
      <data key="d4">zck</data>
      <data key="d5">-21</data>
      <data key="d6">1537426440.0</data>
      <data key="d7">&gt; If a computer could simulate itself faster than it could run, then you could run a faster simulator inside the simulator, and in turn have an ever increasing speedup.

This isn't a proof of its impossibility, it's a proof we haven't figured out how to do it yet. I agree it's impossible, but I don't think the argument here holds up.</data>
      <data key="d8">335</data>
      <data key="d9">5.521</data>
      <data key="d10">0.0</data>
      <data key="d11">8.8</data>
      <data key="d12">0.1764</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c36">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6adm33</data>
      <data key="d4">hnerixh</data>
      <data key="d5">-18</data>
      <data key="d6">1537430159.0</data>
      <data key="d7">To be fair, a computer could simulate a faster clone of itself, but only if we simulate the reality around the simulation as well. For example we can simulate high frequency hardware circuits in software. Or you know, just go full matrix. Never go full matrix.</data>
      <data key="d8">260</data>
      <data key="d9">5.474</data>
      <data key="d10">0.0</data>
      <data key="d11">7.8</data>
      <data key="d12">0.1277</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c37">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6anoiv</data>
      <data key="d4">wasimwesley</data>
      <data key="d5">-2</data>
      <data key="d6">1537440080.0</data>
      <data key="d7">But like, can a digital computer simulate a quantum computer? Or could some imaginary, immensely complex analog computer simulate a digital computer, that simulates a faster version of the original?

I'm imagining that guy [who built a calculator using minecraft blocks](https://www.tomshardware.com/news/Minecraft-Calculator-Graphing-MaxSGB-Scientific,15109.html)...pretty outlandish, but he did it!

And really, every computer is built out of basic blocks in one sense or another, right?</data>
      <data key="d8">489</data>
      <data key="d9">8.078</data>
      <data key="d10">0.0</data>
      <data key="d11">12.8</data>
      <data key="d12">0.0906</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c38">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1kvr</data>
      <data key="d3">e6an120</data>
      <data key="d4">CowboyFromSmell</data>
      <data key="d5">-12</data>
      <data key="d6">1537439431.0</data>
      <data key="d7">&gt; If a computer could simulate itself faster than it could run, then you could run a faster simulator inside the simulator, and in turn have an ever increasing speedup.

Not only **can** this be done, it **has** been done. See [my answer](https://www.reddit.com/r/compsci/comments/9h8t0k/comment/e6ak6tl?st=JM9YIVT3&amp;sh=bc45597d).</data>
      <data key="d8">329</data>
      <data key="d9">7.629</data>
      <data key="d10">0.0</data>
      <data key="d11">9.9</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c39">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a1zo8</data>
      <data key="d4">TheMasterBaker01</data>
      <data key="d5">71</data>
      <data key="d6">1537419428.0</data>
      <data key="d7">You could really just think of this like, if a computer can only physically process 10 bits per second, then no simulation inside that machine could ever process faster than 10 bits per seconds just due to physical limitations on the hardware.</data>
      <data key="d8">243</data>
      <data key="d9">5.528</data>
      <data key="d10">0.0</data>
      <data key="d11">18.5</data>
      <data key="d12">0.1717</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c40">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a1zo8</data>
      <data key="d3">e6a7im5</data>
      <data key="d4">Sukrim</data>
      <data key="d5">-32</data>
      <data key="d6">1537424297.0</data>
      <data key="d7">Only if that simulation also always simulates all steps instead of having an optimizer stage and only simulating the outcome of the processing.

JIT compilers would be an example.</data>
      <data key="d8">179</data>
      <data key="d9">5.692</data>
      <data key="d10">0.0</data>
      <data key="d11">11.3</data>
      <data key="d12">0.1806</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c41">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a3tv5</data>
      <data key="d4">hypermog</data>
      <data key="d5">154</data>
      <data key="d6">1537420972.0</data>
      <data key="d7">In this house we obey the laws of thermodynamics</data>
      <data key="d8">48</data>
      <data key="d9">4.444</data>
      <data key="d10">0.0</data>
      <data key="d11">4.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c42">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a3tv5</data>
      <data key="d3">e6af06o</data>
      <data key="d4">mulletlaw</data>
      <data key="d5">9</data>
      <data key="d6">1537431528.0</data>
      <data key="d7">It just keeps going *faster and faster.*</data>
      <data key="d8">40</data>
      <data key="d9">5.167</data>
      <data key="d10">0.0</data>
      <data key="d11">0.1</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c43">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a3tv5</data>
      <data key="d3">e6b01ja</data>
      <data key="d4">agumonkey</data>
      <data key="d5">1</data>
      <data key="d6">1537456848.0</data>
      <data key="d7">Still, since my early years in programming, one of my deepest desire was to study how to make interpretation layers run as close as possible as a single one.</data>
      <data key="d8">157</data>
      <data key="d9">5.25</data>
      <data key="d10">0.0</data>
      <data key="d11">12.2</data>
      <data key="d12">0.4019</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c44">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a78sn</data>
      <data key="d4">nanodano</data>
      <data key="d5">36</data>
      <data key="d6">1537424045.0</data>
      <data key="d7">Could you pull a wagon and have the wagon go faster than you?</data>
      <data key="d8">61</data>
      <data key="d9">4.364</data>
      <data key="d10">0.0</data>
      <data key="d11">3.6</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c45">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a78sn</data>
      <data key="d3">e6axgas</data>
      <data key="d4">daviegravee</data>
      <data key="d5">12</data>
      <data key="d6">1537452258.0</data>
      <data key="d7">No but I could start pulling a wagon downhill briefly before it gains monentum and crushes me to death which is pretty close</data>
      <data key="d8">124</data>
      <data key="d9">4.435</data>
      <data key="d10">0.0</data>
      <data key="d11">8.7</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c46">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6ags43</data>
      <data key="d4">olliej</data>
      <data key="d5">11</data>
      <data key="d6">1537433275.0</data>
      <data key="d7">There are different reasons, such as the tautological/obviously not happening: if a system can simulate itself to run code faster than it could run the code itself, then you would just have the simulator run the simulator, recursively to get an huge performance win.

Another trivial way: take the fastest/shortest runtime instruction, and run it in the simulator. The fastest thing it can do is to just execute the instruction natively, which is obviously not faster than itself.

Now you might be thinking “the simulator could optimize the code before executing it”, but if it does that it could still just run the optimized code directly rather than going through the simulator.

Hence the absolute best case performance of a simulator is identical performance to running natively. To achieve that the simulator cannot do *anything* other than run the code directly, which means it’s no longer a simulator.

Therefore a simulator of any machine, running on top of a real version of the machine must be slower than the host machine itself.</data>
      <data key="d8">1041</data>
      <data key="d9">8.622</data>
      <data key="d10">0.0</data>
      <data key="d11">12.9</data>
      <data key="d12">0.2816</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c47">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ags43</data>
      <data key="d3">e6bhj22</data>
      <data key="d4">singham</data>
      <data key="d5">1</data>
      <data key="d6">1537482709.0</data>
      <data key="d7">Is the idea of water blowing up in finite time related to this : 

https://math.stackexchange.com/questions/2283496/a-basic-understanding-of-the-navier-stokes-or-terry-taos-exploding-water-pro

&gt; Tao's idea is to set up initial data that successively moves energy from longer length scales to shorter length scales by constructing smaller, faster vortices. As in the NYT quote, it is a bit like a machine which constructs a small copy of itself and then dissipates, and then the copy creates an even smaller copy of itself and then dissipates, etc. This process then accelerates fast enough that, roughly speaking, after only a finite amount of time the machine already has no size. In the modified Navier-Stokes used in his recent paper, this construction actually goes through and leads to finite time blowup.

https://www.quantamagazine.org/terence-tao-proposes-fluid-new-path-in-navier-stokes-problem-20140224/</data>
      <data key="d8">914</data>
      <data key="d9">9.593</data>
      <data key="d10">0.0</data>
      <data key="d11">14.9</data>
      <data key="d12">0.144</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c48">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a2gkg</data>
      <data key="d4">Dev__</data>
      <data key="d5">31</data>
      <data key="d6">1537419808.0</data>
      <data key="d7">You can use a light bulb to power a solar cell that powers a light bulb.

The second light bulb will never emit as much energy as the first.

Or you could go with a photocopier analogy - if you copy a copy of copy there will be a reduction in quality. There will always be a loss. As the other commentor suggested if there was some kind of improvement or increase within the system the consequences would be absurd. </data>
      <data key="d8">416</data>
      <data key="d9">5.964</data>
      <data key="d10">0.0</data>
      <data key="d11">7.1</data>
      <data key="d12">0.1137</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c49">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a2gkg</data>
      <data key="d3">e6ahffh</data>
      <data key="d4">sheikhy_jake</data>
      <data key="d5">3</data>
      <data key="d6">1537433903.0</data>
      <data key="d7">I quite like the photocopier analogy. </data>
      <data key="d8">38</data>
      <data key="d9">5.167</data>
      <data key="d10">0.0</data>
      <data key="d11">10.4</data>
      <data key="d12">0.4201</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c50">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a2gkg</data>
      <data key="d3">e6bggvd</data>
      <data key="d4">MjrK</data>
      <data key="d5">2</data>
      <data key="d6">1537481789.0</data>
      <data key="d7">Both of these analogies are hand-waiving to the point of being completely misleading.

&amp;#x200B;</data>
      <data key="d8">95</data>
      <data key="d9">5.615</data>
      <data key="d10">0.0</data>
      <data key="d11">7.6</data>
      <data key="d12">-0.4576</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c51">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a3ghy</data>
      <data key="d4">Dustin-</data>
      <data key="d5">9</data>
      <data key="d6">1537420653.0</data>
      <data key="d7">For a super simple example, a NOT gate (a switch who's output is opposite of its input) can be "simulated" by stringing 3 NOT gates together in a line, but it would take 3 times longer to run than a single one. </data>
      <data key="d8">211</data>
      <data key="d9">4.5</data>
      <data key="d10">0.0474</data>
      <data key="d11">17.3</data>
      <data key="d12">0.3506</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c52">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a3ghy</data>
      <data key="d3">e6a6wyo</data>
      <data key="d4">ctchalk</data>
      <data key="d5">-4</data>
      <data key="d6">1537423734.0</data>
      <data key="d7">In your model, three NOT gates in a line can be simulated by one NOT gate, and in this case the simulator takes 1/3 as long as the three gates.</data>
      <data key="d8">143</data>
      <data key="d9">4.625</data>
      <data key="d10">0.0</data>
      <data key="d11">10.3</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c53">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6a4omn</data>
      <data key="d4">Reddit1990</data>
      <data key="d5">2</data>
      <data key="d6">1537421723.0</data>
      <data key="d7">Its like running an emulator... Except the emulator has the same specs as your computer, so time needs to dilated for it to be able to run properly. I mean you only have one machine, you cant have two machines for the price of one. That would break the laws of conservation of information (pretty sure thats a thing, or it should be).</data>
      <data key="d8">334</data>
      <data key="d9">5.28</data>
      <data key="d10">0.0</data>
      <data key="d11">7.1</data>
      <data key="d12">0.1699</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c54">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a4omn</data>
      <data key="d3">e6an0qu</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">4</data>
      <data key="d6">1537439423.0</data>
      <data key="d7">&gt; That would break the laws of conservation of information

That would make physics a lot easier if it does end up being true, but our current understanding is that black holes destroy information - it's fundamentally what [Stephen Hawking spent his life working on exploring](https://en.wikipedia.org/wiki/Black_hole_information_paradox).</data>
      <data key="d8">339</data>
      <data key="d9">6.951</data>
      <data key="d10">0.0</data>
      <data key="d11">22.8</data>
      <data key="d12">-0.2248</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c55">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6ahi9a</data>
      <data key="d4">ocean07</data>
      <data key="d5">-2</data>
      <data key="d6">1537433981.0</data>
      <data key="d7">This is basically saying we can never truly simulate the universe if the universe is a simulation. </data>
      <data key="d8">99</data>
      <data key="d9">5.786</data>
      <data key="d10">0.0</data>
      <data key="d11">12.3</data>
      <data key="d12">-0.3412</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c56">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ahi9a</data>
      <data key="d3">e6aiu70</data>
      <data key="d4">mistahspecs</data>
      <data key="d5">1</data>
      <data key="d6">1537435277.0</data>
      <data key="d7">I don't think you should have the conditional there. It doesn't matter if the universe is a simulation or not, we cannot simulate the entire universe inside of the universe. </data>
      <data key="d8">174</data>
      <data key="d9">5.64</data>
      <data key="d10">0.0</data>
      <data key="d11">9.1</data>
      <data key="d12">-0.0095</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c57">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ahi9a</data>
      <data key="d3">e6aih3j</data>
      <data key="d4">olliej</data>
      <data key="d5">1</data>
      <data key="d6">1537434922.0</data>
      <data key="d7">Wording screwed up maybe?

we can’t simulate the entire universe from within the universe, being a simulation or not is irrelevant. Basically there is X amount of information/energy in the universe, so to simulate the entire universe you would need *at least* X information/energy, but you can’t do that because you’re already using all of X amount of stuff in the universe simply being the universe.
</data>
      <data key="d8">401</data>
      <data key="d9">7.043</data>
      <data key="d10">0.0</data>
      <data key="d11">11.9</data>
      <data key="d12">-0.247</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c58">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6btixm</data>
      <data key="d4">znegva</data>
      <data key="d5">0</data>
      <data key="d6">1537492536.0</data>
      <data key="d7">No, it's false. We can construct a computer made up of two subunits A and B. A and B can each execute the same programs, only B is faster than A. We can feed a program to the computer and instruct it to run on A. Meanwhile, B is idle. Now we can simulate this execution using a simulator program that runs on B. Since B is arbitrarily faster than A and simulating B's idleness requires no computation, we're faster than the original execution.

This is exactly what happens when recompiling a program so that it uses faster combinations of instructions.

The key here is to realize that a simulation consists in running a *model* of a machine. Depending on the complexity of the model, "running the model" may be somewhat slower or faster but it's different from replicating the original machine with infinite physical precision, if there were such thing.
</data>
      <data key="d8">856</data>
      <data key="d9">7.344</data>
      <data key="d10">0.021</data>
      <data key="d11">9.2</data>
      <data key="d12">0.018</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c59">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6btixm</data>
      <data key="d3">e6cdjt5</data>
      <data key="d4">znegva</data>
      <data key="d5">1</data>
      <data key="d6">1537509287.0</data>
      <data key="d7">Could the downvoter(s) explain their source of dissatisfaction, please?</data>
      <data key="d8">71</data>
      <data key="d9">5.9</data>
      <data key="d10">0.0</data>
      <data key="d11">9.2</data>
      <data key="d12">-0.2263</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c60">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">9h8t0k</data>
      <data key="d3">e6ak6tl</data>
      <data key="d4">CowboyFromSmell</data>
      <data key="d5">-18</data>
      <data key="d6">1537436603.0</data>
      <data key="d7">No, definitely not a law.

[PyPy is a Python implementation](https://pypy.org/) in Python that can run faster than the C implementation of Python with less memory and better concurrency. So that’s a similar problem, if not the same problem - virtual machines are machines too. 

You can [read more about how PyPy works here](https://stackoverflow.com/a/2592094) but the gist is that they used higher level abstractions available in Python to make optimizations unavailable to C. 

This really isn’t unlike CPUs. Several Intel CPUs have included a decoder step where it converted regular x86 op codes to simpler RISC-based op codes. This enabled them to make optimization’s they couldn’t have otherwise. So in a sense it happens at a hardware level already.

They also keep runtime metrics about branches to make better predictions and do speculative execution. It’s by no means unreasonable to have a VM do a better job of predicting branches. It’s just a matter of running the optimizer at a level higher.

So yes, we have built virtual machines that can emulate themselves faster than the original. I see no reason why this absolutely can’t be true for non-virtual machines as well.

Edit: clarity

Edit:

Alright, everyone’s heavily downvoting me, so let’s set some bounds. If you read to the bottom I have an example of such a hardware simulator.

A simulator mimics the **behavior**. For a CPU, this means it implements the instruction set and each instruction returns the same result for each instruction. You could even argue that it needs to have the same clock speed, but you can’t ever argue that it has to have the same instruction throughput. Otherwise, it would be almost impossible to build simulators because they would usually have a lower throughput (be slower). 

Intel has successfully used clock speed as a measure of CPU performance ever since the Pentium 3. While clock speed has implications on overall performance, it’s far from the truth. 

Long ago, to achieve instruction throughput, CPU manufacturers started pipelining. Simplistically, this means that each instruction gets partially computed on each cycle. Suddenly, instead of processing one instruction at a time, there are lots of instructions in flight. On modern Intel CPUs, there can be as many as 168 in flight instructions at any given time.

So now the problem is keeping the pipeline full. If it stays full, all the hardware is busy. If a “bubble” forms, we’ve lost opportunity to optimally utilize the hardware. This is a very hard problem.

IF statements are one of the primary places bubbles would form. You don’t know which instruction to load until the IF condition is fully evaluated. This is where speculative execution comes in - you keep track of which branches are usually taken so that you can make better guesses. 

The problem is CPUs have a hardware budget - there are a finite amount of transistors they can use for keeping branch statistics, but a much larger number of branches to be taken (and scenarios under which branches execute, etc). 

A software-based simulator should have a much larger amount of memory available to keep branch statistics, so should have a larger capacity to make speculative execution decisions.

If I were to make such a simulator that executes code faster than the original, I’d do it very similar to what JIT compilers do (e.g. JVM, CLR, etc).

1. To start, don’t pass instructions directly through to the CPU. Instead, put instrumentation around branches to keep track of statistics. 
2. After about 10,000 iterations of a loop, “rewrite” the instructions that are passed through to the CPU such that the CPU makes much better speculation decisions.

In step 1, the simulator would be significantly slower than the original. In step 2, the hot code could be significantly faster than the original CPU would have executed it.

Again, this isn’t new. It’s what JIT compilers do. You can argue if they’re *effective*, but you can’t tell me they’re *impossible* (which is fundamentally what OP’s professor said).</data>
      <data key="d8">4047</data>
      <data key="d9">10.423</data>
      <data key="d10">0.0</data>
      <data key="d11">8.9</data>
      <data key="d12">0.0709</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c61">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ak6tl</data>
      <data key="d3">e6awoki</data>
      <data key="d4">Putnam3145</data>
      <data key="d5">7</data>
      <data key="d6">1537450993.0</data>
      <data key="d7">Python is [not a virtual machine.](https://stackoverflow.com/questions/441824/java-virtual-machine-vs-python-interpreter-parlance)

&gt;It’s by no means unreasonable to have a VM do a better job of predicting branches. It’s just a matter of running the optimizer at a level higher.

This is not a simulation of the same computer, then.</data>
      <data key="d8">332</data>
      <data key="d9">7.694</data>
      <data key="d10">0.0</data>
      <data key="d11">9.9</data>
      <data key="d12">0.1399</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c62">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a3hx5</data>
      <data key="d3">e6bd0r3</data>
      <data key="d4">TKAAZ</data>
      <data key="d5">4</data>
      <data key="d6">1537478587.0</data>
      <data key="d7">Uhhhh. You are completely missing complexity theory? This would imply exponential speedup and a near collapse of complexity classes. If a speedup is  possible this would surely imply P=NP=EXPTIME=... wouldn't it?</data>
      <data key="d8">212</data>
      <data key="d9">6.034</data>
      <data key="d10">0.0</data>
      <data key="d11">10.8</data>
      <data key="d12">-0.1033</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c63">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a3hx5</data>
      <data key="d3">e6ahz34</data>
      <data key="d4">sheikhy_jake</data>
      <data key="d5">1</data>
      <data key="d6">1537434441.0</data>
      <data key="d7">I'm not sure I followed. Do you mind saying that again in different words?

My understanding is that it's a theoretically impossible task for a computer to simulate itself performing a task faster than in can perform a task not just practically. Surely  compute_time(task A) &lt;= simulation_time(compute_time(A)). But you're saying that isnt the case?</data>
      <data key="d8">349</data>
      <data key="d9">6.535</data>
      <data key="d10">0.0</data>
      <data key="d11">9.8</data>
      <data key="d12">0.0399</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c64">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6al5vq</data>
      <data key="d3">e6bcv57</data>
      <data key="d4">SirClueless</data>
      <data key="d5">20</data>
      <data key="d6">1537478429.0</data>
      <data key="d7">Actually this is not true. If you set up a lever, you can return a greater force than you apply. For example, with a car Jack, the downward force of a single human can lift a car.

Force is not conserved, the things that are conserved are energy and momentum.</data>
      <data key="d8">259</data>
      <data key="d9">5.583</data>
      <data key="d10">0.0</data>
      <data key="d11">4.6</data>
      <data key="d12">0.0773</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c65">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6al5vq</data>
      <data key="d3">e6bg8mu</data>
      <data key="d4">MjrK</data>
      <data key="d5">4</data>
      <data key="d6">1537481589.0</data>
      <data key="d7">If you are referring to Newton's third law, then the statement is that, for every force, there is an equal and opposite reaction. Key point being, the reaction force is always exactly equal in magnitude - always. It's never lesser.

And no, this isn't a good analogy for simulation.</data>
      <data key="d8">282</data>
      <data key="d9">5.575</data>
      <data key="d10">0.0</data>
      <data key="d11">6.8</data>
      <data key="d12">-0.1396</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c66">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6al5vq</data>
      <data key="d3">e6aq2gq</data>
      <data key="d4">voidmechanic</data>
      <data key="d5">-57</data>
      <data key="d6">1537442554.0</data>
      <data key="d7">Unless it's you know... THE FORCE OF THE DARK SIDE BOOO WHAA HAHAHAHA

You've been dark sided. </data>
      <data key="d8">95</data>
      <data key="d9">4.471</data>
      <data key="d10">0.0</data>
      <data key="d11">4.2</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c67">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a47fr</data>
      <data key="d3">e6af9mo</data>
      <data key="d4">timshoaf</data>
      <data key="d5">9</data>
      <data key="d6">1537431787.0</data>
      <data key="d7">You might have been high as balls, but the underlying notion is interesting and I am disappointed to see you so thoroughly downvoted.

The idea that the physical reality has less constructs imposed than a simulated one is not at all an uninteresting statement. It is one I have spent more than a few hours pondering.

Presumably I could construct a simulation of a universe that had different laws of physics and the resulting time evolution of said system would always take on values of a state space that was a strict subset of that of the machine upon which it is being simulated.

Ostensibly one wonders whether, there is some physical analogy to the incompleteness theorems. 

Yes yes, I know the highly specific domain to which those apply with respect to formal systems containing the peano axioms, however, that isn't the question. The question is, by some analogous constructing, some godel numbering of the state space of the universe (should we find it discrete), whether the system itself must be either incomplete or inconsistent and, in a further but somewhat tangential question, whether the computational power of our universe, if simulated, is indeed equivalent or strictly less than that of the simulating universe. 

Are we complete, in the sense that we can with I finite time and resource, simulate anything in the simulating universe? Or are we incomplete, and restricted to a series of states that do not even begin to touch that of the simulating universe as if we were a little DFA being run by a Turing machine.

It's normally at this point I go down some rabit hole of how to cheat, exploit relativity to have time experienced by the machine faster? Issues with that set up abound in information retrieval... Etc etc..

But it's an interesting line of thought and at some point would be a fun bit of recreational math to actually try to formalize the notion, even if it shows it all to be bunk in the first few hours of construction.</data>
      <data key="d8">1960</data>
      <data key="d9">8.202</data>
      <data key="d10">0.0</data>
      <data key="d11">13.1</data>
      <data key="d12">0.067</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c68">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a47fr</data>
      <data key="d3">e6assj0</data>
      <data key="d4">knot_hk</data>
      <data key="d5">0</data>
      <data key="d6">1537445700.0</data>
      <data key="d7">dude thats epic :D hope u shared with ur buds at the lunch table :D</data>
      <data key="d8">67</data>
      <data key="d9">3.786</data>
      <data key="d10">0.0</data>
      <data key="d11">3.2</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c69">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6am7b7</data>
      <data key="d3">e6amppf</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">22</data>
      <data key="d6">1537439120.0</data>
      <data key="d7">Fundamentally, the computer has to expend some amount of energy and time running that simulation - if the simulation were identical to the machine, how would that simulation exist? Where would it store its state? It doesn't need much state - a hypervisor can be written to use only tiny, tiny amounts of memory, and the amount of instructions it takes to rewrite or redirect the memory accesses is tiny... but it's all still there. Even if you bake it mostly into the hardware, as Intel has with the VT extensions.

You can get vanishingly close to the same performance as the host machine, but you can't ever get the same or greater performance. Luckily for us, a lot of the time that tiny bit of overhead is irrelevant to our end goals... but for the sake of this discussion it's **everything**.</data>
      <data key="d8">797</data>
      <data key="d9">7.146</data>
      <data key="d10">0.0</data>
      <data key="d11">8.9</data>
      <data key="d12">0.2144</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c70">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a9sq2</data>
      <data key="d3">e6ab7wr</data>
      <data key="d4">trex-eaterofcadrs</data>
      <data key="d5">25</data>
      <data key="d6">1537427819.0</data>
      <data key="d7">Information is energy and so then you would bust the laws of thermodynamics if you could do this. </data>
      <data key="d8">98</data>
      <data key="d9">4.647</data>
      <data key="d10">0.0</data>
      <data key="d11">10.3</data>
      <data key="d12">0.2732</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c71">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a9sq2</data>
      <data key="d3">e6abg3m</data>
      <data key="d4">Little_Milton</data>
      <data key="d5">-13</data>
      <data key="d6">1537428039.0</data>
      <data key="d7">Underrated post. What we have today would surely be seen as impossible black magic a hundred years ago, let alone 200-300. I’m sure we’ll find some new mind blowing way of making CPU’s in 20-30 years, or maybe a new way of computing all together.</data>
      <data key="d8">246</data>
      <data key="d9">4.581</data>
      <data key="d10">0.0</data>
      <data key="d11">9.7</data>
      <data key="d12">0.1815</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c72">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6adm33</data>
      <data key="d3">e6ah58u</data>
      <data key="d4">olliej</data>
      <data key="d5">6</data>
      <data key="d6">1537433632.0</data>
      <data key="d7">Yes but the resulting simulation is for a different machine. When talking about something like this it’s really important to note the initial conditions of the statement.

Otherwise you could, for example, simulate an arm variant that supported hardware multiply on a arm variant that didn’t. If your simulator implemented the multiply instructions directly inline, then it will run such code faster than the host could. (Basically if you hit an unsupported instruction on arm you take a fault and the OS is expected to do the work to produce the correct result)


Clearly that is not a reasonable/useful comparison :D</data>
      <data key="d8">618</data>
      <data key="d9">6.474</data>
      <data key="d10">0.0</data>
      <data key="d11">11.2</data>
      <data key="d12">0.2722</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c73">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6anoiv</data>
      <data key="d3">e6aogcn</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">8</data>
      <data key="d6">1537440875.0</data>
      <data key="d7">&gt; But like, can a digital computer simulate a quantum computer? 

Yes. In fact, almost all of the quantum computing we've ever done in the history of computation has been done on conventional digital machines. (We have ran some quantum calculations, but on computers that are composed of tens or possibly small hundreds of qubits...)

But quantum computers aren't magic machines. They're faster at conventional machines at solving certain kinds of problems that require computing through massive search spaces (some cryptography algorithms, some physics simulations, etc)... but they're actually not a hell of a lot better than a conventional machine at anything else, and they're exceptionally complicated to build (hence why in 40 years we've barely scratched the surface of building the necessary hardware).

&gt; Or could some imaginary, immensely complex analog computer simulate a digital computer, that simulates a faster version of the original?

It will still never beat the host machine. This has nothing to do with computation specifically - you're trying to build a machine that defies the universe: a machine that generates information faster than that machine can generate information. It proves itself can't exist through simple contradiction.

If it could exist, it'd be better than a perpetual motion machine - you could use it to precompute what would happen next in the universe for every particle for all of the rest of history...</data>
      <data key="d8">1447</data>
      <data key="d9">8.587</data>
      <data key="d10">0.0</data>
      <data key="d11">12.4</data>
      <data key="d12">0.134</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c74">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6anoiv</data>
      <data key="d3">e6b7k87</data>
      <data key="d4">barsoap</data>
      <data key="d5">-1</data>
      <data key="d6">1537472041.0</data>
      <data key="d7">Your computer, given enough memory and time, can compute any computable function. That's what being a (bounded) Turing machine means, it also means that you can simulate any other Turing machine.

Quantum computers are no more powerful, what makes them interesting is the possibility of exponential speedups, essentially by better physical data representation. I say "possibility" because noone has yet actually demonstrated it, and there's the possibility that any speedup you gain will be eaten by increasing quantum noise, making the whole idea impossible to exploit in practice. Butchering Einstein: "You cannot cheat God at dice".</data>
      <data key="d8">635</data>
      <data key="d9">6.5</data>
      <data key="d10">0.0646</data>
      <data key="d11">12.0</data>
      <data key="d12">0.2771</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c75">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a7im5</data>
      <data key="d3">e6a8afs</data>
      <data key="d4">krimin_killr21</data>
      <data key="d5">32</data>
      <data key="d6">1537425014.0</data>
      <data key="d7">In order to simulate it's outcome, the computer must first know the outcome, which it could not possibly do fast than itself </data>
      <data key="d8">125</data>
      <data key="d9">5.05</data>
      <data key="d10">0.0</data>
      <data key="d11">10.7</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c76">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a7im5</data>
      <data key="d3">e6ai1t0</data>
      <data key="d4">olliej</data>
      <data key="d5">14</data>
      <data key="d6">1537434515.0</data>
      <data key="d7">Yes, but then I could run the jit on the same code and run it natively and it would still be faster than in the simulator.

Essentially if you have a jit (or recompiler) that can optimize the code for the simulator you can perform those same optimizations to run it natively. Basically what you’re doing when optimizing the code for the simulator is changing what code you are simulating.

Essentially for it to be a simulator it needs to ensure that every visible state change in the simulator matches the state changes in the machine being simulated. So even if you could (for example) recognize that a given operation was something like ‘add 0’, you could save the read/add/store but you would still need to update all the flags, and increment the pc multiple (separate) times.

Actually maybe this helps for the intuition:

Any instruction being simulated requires the simulator to increment the PC of the simulated machine, in addition to performing the operation itself. That means a best case average time to simulate an instruction is ‘average instruction time + time to increment Simualted PC’ - also necessarily you don’t have enough native state to hold the state of the simulated machine because if nothing else your simulator is already using the native PC state, so you have time cost of managing the state overflow.</data>
      <data key="d8">1330</data>
      <data key="d9">8.901</data>
      <data key="d10">0.0</data>
      <data key="d11">15.8</data>
      <data key="d12">0.4581</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c77">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a7im5</data>
      <data key="d3">e6abcur</data>
      <data key="d4">khedoros</data>
      <data key="d5">6</data>
      <data key="d6">1537427953.0</data>
      <data key="d7">Ah, that's the solution! We just need to nest JIT optimization stages within each other! Have the optimizer optimize the optimizer optimizing the optimizer that optimizes the native code.

The problem here is that while there are workloads that could be optimized and run faster than native code, there are also workloads that would run slower than native code. </data>
      <data key="d8">362</data>
      <data key="d9">7.22</data>
      <data key="d10">0.0</data>
      <data key="d11">9.1</data>
      <data key="d12">0.4586</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c78">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6af06o</data>
      <data key="d3">e6aycxw</data>
      <data key="d4">technocapital</data>
      <data key="d5">1</data>
      <data key="d6">1537453814.0</data>
      <data key="d7">did somebody say... ａｃｃｅｌｅｒａｔｅ?</data>
      <data key="d8">31</data>
      <data key="d9">5.4</data>
      <data key="d10">0.0</data>
      <data key="d11">1.3</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c79">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bggvd</data>
      <data key="d3">e6bh0qx</data>
      <data key="d4">Dev__</data>
      <data key="d5">3</data>
      <data key="d6">1537482269.0</data>
      <data key="d7">Care to elaborate or are you happy to leave a "you're wrong" comment.

</data>
      <data key="d8">71</data>
      <data key="d9">4.5</data>
      <data key="d10">0.1831</data>
      <data key="d11">6.0</data>
      <data key="d12">0.5574</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c80">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a6wyo</data>
      <data key="d3">e6a9c93</data>
      <data key="d4">EldritchSundae</data>
      <data key="d5">10</data>
      <data key="d6">1537426009.0</data>
      <data key="d7">Right, but a NOT gate simulator that implements virtual NOT gates with 3 real gates cannot simulate that virtual NOT in less than 3 real gates' time by definition.

Or flip it around: imagine you have the world's fastest possible computer that can perform an OP infinitesimally fast.

If it were simulating itself, that simulation would be running as fast as possible (this is the world's fastest possible computer), with zero wasted cycles (the simulation is mimicking the world's fastest possible computer).

And still it could only simulate any given OP as fast as itself can run. By definition. It doesn't matter what OP is or how it's implemented, it kind of cancels out of the equation.

And we are far from the idealized perfect hardware that defies causality like this one, so in reality simulations are always gonna run slower.</data>
      <data key="d8">836</data>
      <data key="d9">7.326</data>
      <data key="d10">0.0</data>
      <data key="d11">12.5</data>
      <data key="d12">0.0051</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c81">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a6wyo</data>
      <data key="d3">e6aglg8</data>
      <data key="d4">Kaon_Particle</data>
      <data key="d5">4</data>
      <data key="d6">1537433095.0</data>
      <data key="d7">The computer you're running the simulation on has 3 NOT gates though, if you remove those all you've done is built a better computer.  </data>
      <data key="d8">135</data>
      <data key="d9">4.696</data>
      <data key="d10">0.0</data>
      <data key="d11">11.5</data>
      <data key="d12">0.4404</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c82">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6an0qu</data>
      <data key="d3">e6anpq1</data>
      <data key="d4">Reddit1990</data>
      <data key="d5">3</data>
      <data key="d6">1537440113.0</data>
      <data key="d7">Destruction of information seems unlikely to me, even if Hawking's work suggests it. If it is true, then I have to assume spontaneous creation of information is also true.</data>
      <data key="d8">171</data>
      <data key="d9">6.043</data>
      <data key="d10">0.0</data>
      <data key="d11">8.9</data>
      <data key="d12">0.0999</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c83">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6an0qu</data>
      <data key="d3">e6an101</data>
      <data key="d4">WikiTextBot</data>
      <data key="d5">1</data>
      <data key="d6">1537439429.0</data>
      <data key="d7">**Black hole information paradox**

The black hole information paradox is a puzzle resulting from the combination of quantum mechanics and general relativity.  Calculations suggest that physical information could permanently disappear in a black hole, allowing many physical states to devolve into the same state. This is controversial because it violates a core precept of modern physics—that in principle the value of a wave function of a physical system at one point in time should determine its value at any other time. A fundamental postulate of the Copenhagen interpretation of quantum mechanics is that complete information about a system is encoded in its wave function up to when the wave function collapses.

***

^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/compsci/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot)   ^]
^Downvote ^to ^remove ^| ^v0.28</data>
      <data key="d8">1144</data>
      <data key="d9">10.977</data>
      <data key="d10">0.0</data>
      <data key="d11">16.4</data>
      <data key="d12">-0.0929</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c84">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aiu70</data>
      <data key="d3">e6ayz38</data>
      <data key="d4">Oriumpor</data>
      <data key="d5">1</data>
      <data key="d6">1537454886.0</data>
      <data key="d7">you're missing the most import last piece: 'we cannot simulate the entire universe inside of the universe **at the same speed of the universe.**'

Now here's the part that'll blow your mind:

If you were in the \*inner\* simulated universe, you don't have any way of perceiving the timing reference differential, so your time is "normal" to you.  But the external universe is always going to be running at some multiplier to your own.

As the outer universe loses energy (heat death) even the most effective energy capture systems will run out of energy and so will the computer you're simulated on probably slowing down as it runs out.  But to you the world would have been going on all along at the same \*perceived\* rate, until the last \*tick\* of the simulator, which never comes.</data>
      <data key="d8">786</data>
      <data key="d9">7.046</data>
      <data key="d10">0.0089</data>
      <data key="d11">11.5</data>
      <data key="d12">0.1875</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c85">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aih3j</data>
      <data key="d3">e6atue3</data>
      <data key="d4">richardathome</data>
      <data key="d5">0</data>
      <data key="d6">1537447036.0</data>
      <data key="d7">This is pretty much my reasoning as to there being no god(s). There's not enough space to contain everything and a being to know everything about that everything.</data>
      <data key="d8">162</data>
      <data key="d9">5.458</data>
      <data key="d10">0.0</data>
      <data key="d11">6.4</data>
      <data key="d12">0.125</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c86">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aih3j</data>
      <data key="d3">e6az68o</data>
      <data key="d4">Oriumpor</data>
      <data key="d5">0</data>
      <data key="d6">1537455233.0</data>
      <data key="d7">you have gotta choose: precision or speed, you can be \*as precise\* as we can effectively measure in our current universe and simulate it slower than the current one, or you can lose the precision and create a neutered variant of our universe (meh, how do strong and weak gravitational forces interact?  meh, skip that part -- too much computation, just futz it with this constant...)  You can run the less precise one (likely) faster than the outer simulation, but it would be at most a subset of our universe.</data>
      <data key="d8">512</data>
      <data key="d9">6.381</data>
      <data key="d10">0.0</data>
      <data key="d11">12.5</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c87">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6awoki</data>
      <data key="d3">e6bgopc</data>
      <data key="d4">CowboyFromSmell</data>
      <data key="d5">-2</data>
      <data key="d6">1537481980.0</data>
      <data key="d7">Read the comments on that StackOverflow answer. Almost every comment points out various aspects that the answer is flat out wrong. Furthermore, they provide no formal definition of a virtual machine nor link to any outside content.

Additionally, the answer says that a VM is analogous to a CPU where

&gt; An instruction executes deterministically based only on the current state of the virtual machine and does not depend on information elsewhere in the instruction stream at that point in time.

This isn’t even true for CPUs. Otherwise, how the hell did Spectre and Meltdown happen?

Here’s a [definition of a simulator:](https://www.google.com/search?q=simulator&amp;ie=UTF-8&amp;oe=UTF-8&amp;hl=en-us&amp;client=safari)

&gt; a machine with a similar set of controls designed to provide a realistic imitation of the operation of a vehicle, aircraft, or other complex system, used for training purposes.

In that sense, PyPy is certainly a simulation of Python in the same way that VirtualBox simulates Windows or Linux.

There is no inherent requirement that simulators make the same optimizations as the thing they’re simulating. That would be called a [Quine](https://www.google.com/search?client=safari&amp;hl=en-us&amp;ei=EqujW8ioFYqI8APhiZGYDA&amp;ins=false&amp;q=quine+program&amp;oq=quine&amp;gs_l=mobile-gws-wiz-serp.1.0.0i71l5.0.0..315661...0.0..0.0.0.......0.u_mxVGV43m4).

Simulators have the same interface, they aren’t required to have the same optimizations.

Edit: wording</data>
      <data key="d8">1447</data>
      <data key="d9">9.362</data>
      <data key="d10">0.0</data>
      <data key="d11">11.7</data>
      <data key="d12">-0.0388</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c88">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bd0r3</data>
      <data key="d3">e6btc8s</data>
      <data key="d4">loamfarer</data>
      <data key="d5">1</data>
      <data key="d6">1537492383.0</data>
      <data key="d7">I'm giving a contrast between practical computation models and theoretic ones (automata.) So, computational classes, not complexity classes. When studying theoretical models of computation you aren't always sure how many state changes are necessary to pull off a particular program, its dependent on the alphabet you use and the finite state machine that is attached. This holds true for FSMs, PDAs, LBAs, PDA-IIs, and TMs. You can implement for yourself an "instruction set" then measure those concretely, but then you start moving into a physically constrained model, after all you can't just magically add numbers or do it ad-hoc on the side yourself outside the model. That needs to be described, but since those results are deterministic and finite they are just collapsed (ie. factored out) to be instantaneous and those details are instead reserved for implementation concerns. So what you measure at this stage is whether something can be computed, including cases where you can run a program that will never end but is always making progress (calculating sqrt(2) or something.)

When I say "sometimes units of measure are given" I refer to using Big O approximations as a pedagogical tool to detail language-class behavior. As opposed to solving Big O of a polynomial or dijkstra's algorithm, the example here might contrast regular and context-free language examples. None of the obtained numbers are necessarily absolute for the aforementioned hand waving. Instead you would measure them with relative bounds. It's also these models of computation that reveal a simulation will take more steps (notice steps not time) than the thing being simulated itself. Again, you really have to move off the mathematically purer models to express that formally. The best someone could do is give a step some time frame, but this given measure will be arbitrary as we know from a real computer it must be clocked to synchronize itself, because different operations and state transitions take different times. So we don't even have these details to measure in the theoretical models and adding them is an empty gesture except for pedagogical reasons.

Now with computational complexity classes, you are measuring problem classes in terms of their time and space (memory) constraints relative to different automata models. But the result that you can't simulate something faster comes from the underlying limitations of the computational models themselves.</data>
      <data key="d8">2452</data>
      <data key="d9">8.57</data>
      <data key="d10">0.0216</data>
      <data key="d11">12.9</data>
      <data key="d12">0.0682</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c89">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ahz34</data>
      <data key="d3">e6anc46</data>
      <data key="d4">umpc</data>
      <data key="d5">17</data>
      <data key="d6">1537439737.0</data>
      <data key="d7">Simplifying a bit, though they are saying in general that computers are bounded by physics whereas computation is bounded by mathematics.</data>
      <data key="d8">137</data>
      <data key="d9">6.389</data>
      <data key="d10">0.0</data>
      <data key="d11">13.8</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c90">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ahz34</data>
      <data key="d3">e6ax1hb</data>
      <data key="d4">pilotInPyjamas</data>
      <data key="d5">0</data>
      <data key="d6">1537451571.0</data>
      <data key="d7">Imagine a computer simulating itself running a simple program,like count a value from 0 to 10^50, then print "finished". This would take an absurdly long time. Theoretically, the computer may perform some static analysis which decides that since we don't need to use the result of the variable, we can omit it from the simulation. So theoretically, the simulated computer may run faster that the program on the actual machine. In practice, this is probably not the case.</data>
      <data key="d8">470</data>
      <data key="d9">6.016</data>
      <data key="d10">0.0191</data>
      <data key="d11">9.4</data>
      <data key="d12">0.068</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c91">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aq2gq</data>
      <data key="d3">e6b3b29</data>
      <data key="d4">stringParameter</data>
      <data key="d5">2</data>
      <data key="d6">1537463799.0</data>
      <data key="d7">username checks out</data>
      <data key="d8">19</data>
      <data key="d9">5.667</data>
      <data key="d10">0.0</data>
      <data key="d11">0.9</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c92">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6af9mo</data>
      <data key="d3">e6amts2</data>
      <data key="d4">SuperGameTheory</data>
      <data key="d5">4</data>
      <data key="d6">1537439234.0</data>
      <data key="d7">I like you. You use words I don’t know to describe my thoughts.

My user name, Supergame Theory, came to me as I was reading up on game theory. By that time I had already invested a bunch of time studying and investigating emergent behavior (via flocking and swarming algorithms...social behavior simulations, I called them). So, I reasoned that emergent behavior must be some sort of *super*game theory, where the simple rules of a game expand out to ever more complex rules as you expand the scope of your observation. I was wrong, I found out, as supergame theory is actually the study of multiple games over time. But I liked the way it sounded, so I stuck with it.

Anyway, I view a lot of things through the lens of emergent behavior. For instance, our cognitive abilities emerge from the relatively simple rules that neurons follow. Physical reality is no different, then, as our physical system emerges from the relatively simple rules of quantum physics. In that respect, quantum physics emerges from its own system.

I tickles my brain to think that what we see as quantum physics is probably a small portion of it’s full system - we only see the parts we can rationalize with our time/space thinking; that it’s only the little bits we can see or fathom because it’s the only parts from which our physical system emerges. I like to think that the larger portion of quantum physics out there is unapproachable because we can’t interact with it. And what of the completely unapproachable system from which quantum physics emerges? What if our language of math, in all its complexity and depth of knowledge, is fundamentally unable to describe the system that quantum physics emerges because our maths deal with things like quantity, which itself might be an emergent concept. In other words, what if quantity only exists as a function of something else?

Anyway, it’s been fun pondering here in my little downvote hole. Thanks for being the one to reply with a really thoughtful comment. You are awesome.</data>
      <data key="d8">2012</data>
      <data key="d9">8.751</data>
      <data key="d10">0.0</data>
      <data key="d11">8.9</data>
      <data key="d12">0.1739</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c93">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6af9mo</data>
      <data key="d3">e6avuqw</data>
      <data key="d4">dancorbe</data>
      <data key="d5">-13</data>
      <data key="d6">1537449737.0</data>
      <data key="d7">You're wasting your energy on someone who's obviously a drug burn-out; and that's why this person is being downvoted.

</data>
      <data key="d8">119</data>
      <data key="d9">5.105</data>
      <data key="d10">0.0</data>
      <data key="d11">10.7</data>
      <data key="d12">-0.1531</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c94">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6amppf</data>
      <data key="d3">e6an7yd</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">1</data>
      <data key="d6">1537439621.0</data>
      <data key="d7">&gt;  if the simulation were identical to the machine, how would that simulation exist?

Is it not the case that two digital images could be identical, down to each and every pixel, but one image be compressed such that it occupies a smaller amount of memory than the other?

</data>
      <data key="d8">273</data>
      <data key="d9">5.658</data>
      <data key="d10">0.0</data>
      <data key="d11">11.5</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c95">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ab7wr</data>
      <data key="d3">e6acquo</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-9</data>
      <data key="d6">1537429300.0</data>
      <data key="d7">*all* information is energy? also, even if it were true, exactly how does that apply here?

EDIT: Downvote if you wish but at least present a coherent argument. This *is* /r/compsci for afterall</data>
      <data key="d8">194</data>
      <data key="d9">4.656</data>
      <data key="d10">0.0</data>
      <data key="d11">5.3</data>
      <data key="d12">-0.34</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c96">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6abg3m</data>
      <data key="d3">e6abxik</data>
      <data key="d4">sn0rrlax</data>
      <data key="d5">2</data>
      <data key="d6">1537428502.0</data>
      <data key="d7">Quantum computing isn’t too far out (computers that can use more than just binary 0 and 1 bits)</data>
      <data key="d8">95</data>
      <data key="d9">3.8</data>
      <data key="d10">0.0</data>
      <data key="d11">8.0</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c97">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aogcn</data>
      <data key="d3">e6bypjq</data>
      <data key="d4">Anonymous</data>
      <data key="d5">1</data>
      <data key="d6">1537496802.0</data>
      <data key="d7">[deleted]</data>
      <data key="d8">9</data>
      <data key="d14">7</data>
      <data key="d10">0.0</data>
      <data key="d11">8.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c98">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6a8afs</data>
      <data key="d3">e6avm7l</data>
      <data key="d4">Sukrim</data>
      <data key="d5">-11</data>
      <data key="d6">1537449405.0</data>
      <data key="d7">Peephole optimizers exist, if you for example see a bogosort implementation you can replace it with a better algorithm if you are only interested in the result.

It is not possible to perfectly simulate a complete system on itself anyways (if you simulate something that uses all available resources on the system, the simulator still needs to fit in addition to that).</data>
      <data key="d8">369</data>
      <data key="d9">6.543</data>
      <data key="d10">0.0</data>
      <data key="d11">16.6</data>
      <data key="d12">0.3042</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c99">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ai1t0</data>
      <data key="d3">e6av3yl</data>
      <data key="d4">Sukrim</data>
      <data key="d5">-3</data>
      <data key="d6">1537448709.0</data>
      <data key="d7">If you require that level of precision (all states of registers, PC etc. are accessible for every intermediate state) from your simulation, then of course I agree.

If your simulation criteria can be relaxed (you simulate "x = 1+1+1+1+1; print x" as "print 5"), then the optimizer could of course also run outside the simulator natively. If it doesn't however, there is a chance that the simulation reaches the correct end state faster than the native naive implementation for a certain class of programs. Even intermediate states (how would the machine look like after 2000 cycles?) could be computed potentially faster for some programs than running them. Thus I'm not so sure about the "always" claim as long as it is not followed by "in the general case".

Anyways, thanks for your long answer.</data>
      <data key="d8">798</data>
      <data key="d9">6.848</data>
      <data key="d10">0.0727</data>
      <data key="d11">8.6</data>
      <data key="d12">0.2563</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c100">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6abcur</data>
      <data key="d3">e6av9la</data>
      <data key="d4">Sukrim</data>
      <data key="d5">2</data>
      <data key="d6">1537448919.0</data>
      <data key="d7">Sure, to refute an "always" claim however, you only need a single counter example.</data>
      <data key="d8">82</data>
      <data key="d9">4.571</data>
      <data key="d10">0.0854</data>
      <data key="d11">8.8</data>
      <data key="d12">0.3182</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c101">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bh0qx</data>
      <data key="d3">e6bjvbs</data>
      <data key="d4">MjrK</data>
      <data key="d5">4</data>
      <data key="d6">1537484685.0</data>
      <data key="d7">Sure

&gt; You can use a light bulb to power a solar cell that powers a light bulb.

&gt; The second light bulb will never emit as much energy as the first.

The assumption of a lower output is due to transmission energy loss or imperfect capture or whatever other physical imperfections in your system design. This setup is a perpetual motion machine of the third kind - it is practically impossible, but does not violate the laws of thermodybamics.

This isn't really analogous to computational overhead because it owes to a practical limitation not a theoretical limitation.


&gt; Or you could go with a photocopier analogy - if you copy a copy of copy there will be a reduction in quality. There will always be a loss. As the other commentor suggested if there was some kind of improvement or increase within the system the consequences would be absurd. 


What do you even mean by quality in this context? An exact replication of the photo, or a faithful representation of some original / reference artifact?

If you mean exact replication, you would have to define some metric for exactness because when you get down to the level of electrons, quantum physics explicitly prohibits copying quantum states. In which case, there is a fundamental physical limit prohibiting exact copying - this is not analogous to computational overhead.

If you mean faithful representation of some reference, with machine learning it is possible to make copies of antique photos which look more faithful to a scene than the antique photo. In this case, it clearly this isn't analogous to computational overhead because it's possible to do better than the original.</data>
      <data key="d8">1644</data>
      <data key="d9">9.096</data>
      <data key="d10">0.0</data>
      <data key="d11">12.0</data>
      <data key="d12">0.1626</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c102">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6anpq1</data>
      <data key="d3">e6ap8hy</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">3</data>
      <data key="d6">1537441672.0</data>
      <data key="d7">Yeah, it's a real problem for everyone that black holes seem to destroy information, for exactly the reasons you can imagine. We want there to be a strong conservation of information law as a direct corollary to the conservation of mass and energy... but we're not there yet.

And Hawkings' work for the most part was trying to resolve the paradox in such a way that information is conserved, while Penrose doesn't seem to mind that information can be destroyed by black holes, and thinks the universe can still be resolved even if it is the case. Still others think that the information resides as a holographic projection on the black hole itself, and isn't lost as much as it is *stored indefinitely* (essentially, black holes become some gigantic form of universal data compression), but you need a lot of string theory and untestable predictions to get there.

It's fascinating to read about, even if it requires a lot of fringe thinking and pretty unsubstantiated math. (And thinking about information being lost as being encoded as the difference between Planck time lets you postulate that time travel is possible, which is also really fun to think about.)</data>
      <data key="d8">1164</data>
      <data key="d9">7.867</data>
      <data key="d10">0.0</data>
      <data key="d11">13.1</data>
      <data key="d12">0.2021</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c103">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ayz38</data>
      <data key="d3">e6b0291</data>
      <data key="d4">mistahspecs</data>
      <data key="d5">1</data>
      <data key="d6">1537456886.0</data>
      <data key="d7">I get that this whole post is about time with relation to simulations, however the comment I replied to did not address time.  While I love the sentiment you posted about (especially the notion of the final tick never actually arriving), I was more so speaking with regards to matter and energy, not processing speed.

I think its possible to simulate **a** universe inside of a universe like what you spoke on, but the post I was replying to mentioned "the" universe.  I don't see any way in which the entirety of the universe and its state can be represented within itself.

For example, say we want to simulate an atom, it would take well over an atom to act as memory for that atom and its metadata if you will, right?</data>
      <data key="d8">722</data>
      <data key="d9">6.3</data>
      <data key="d10">0.0055</data>
      <data key="d11">11.2</data>
      <data key="d12">0.2561</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c104">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6atue3</data>
      <data key="d3">e6aytwf</data>
      <data key="d4">p_pistol</data>
      <data key="d5">1</data>
      <data key="d6">1537454638.0</data>
      <data key="d7">Well, it doesn't mean there is no God, but the good would certainly not be omniscient.

That is, if god even comes to this universe.</data>
      <data key="d8">132</data>
      <data key="d9">4.25</data>
      <data key="d10">0.0</data>
      <data key="d11">3.4</data>
      <data key="d12">0.5442</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c105">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6az68o</data>
      <data key="d3">e6bs3v1</data>
      <data key="d4">olliej</data>
      <data key="d5">1</data>
      <data key="d6">1537491378.0</data>
      <data key="d7">If its a simulation, within the bounds of the stated rule, then you do have to simulate all state, otherwise you aren't simulating the machine you say you are :)</data>
      <data key="d8">161</data>
      <data key="d9">5.16</data>
      <data key="d10">0.0</data>
      <data key="d11">13.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c106">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ax1hb</data>
      <data key="d3">e6b244l</data>
      <data key="d4">sheikhy_jake</data>
      <data key="d5">3</data>
      <data key="d6">1537461143.0</data>
      <data key="d7">Isn't that not a complete simulation though? You're simulating a simplified scenario in which the long computation isn't actually performed. </data>
      <data key="d8">141</data>
      <data key="d9">6.263</data>
      <data key="d10">0.0</data>
      <data key="d11">11.9</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c107">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ax1hb</data>
      <data key="d3">e6b2v4d</data>
      <data key="d4">Alaskan_Thunder</data>
      <data key="d5">3</data>
      <data key="d6">1537462811.0</data>
      <data key="d7">In order to simulate a computer counting from 0 to 10^50, the machine not only needs to count from 0 to 10^50, but it also has to simulate the computer doing the actual thing.</data>
      <data key="d8">175</data>
      <data key="d9">5.708</data>
      <data key="d10">0.0</data>
      <data key="d11">15.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c108">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ax1hb</data>
      <data key="d3">e6bd8r7</data>
      <data key="d4">TKAAZ</data>
      <data key="d5">3</data>
      <data key="d6">1537478807.0</data>
      <data key="d7">Your remark is highly esoteric and completely irrelevant to computational complexity though, since the problem of determining whether a part of the computation is irrelevant to the result you want is undecidable.</data>
      <data key="d8">212</data>
      <data key="d9">7.16</data>
      <data key="d10">0.0</data>
      <data key="d11">20.5</data>
      <data key="d12">-0.34</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c109">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b3b29</data>
      <data key="d3">e6b3ftv</data>
      <data key="d4">voidmechanic</data>
      <data key="d5">5</data>
      <data key="d6">1537464077.0</data>
      <data key="d7">It was an admittedly stupid comment. Somehow the 40 downvotes still feel like fame. I'm not a troll. Just not funny. I apologize 😂😂</data>
      <data key="d8">131</data>
      <data key="d9">4.522</data>
      <data key="d10">0.0</data>
      <data key="d11">2.8</data>
      <data key="d12">-0.052</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c110">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6amts2</data>
      <data key="d3">e6bl0cq</data>
      <data key="d4">timshoaf</data>
      <data key="d5">1</data>
      <data key="d6">1537485627.0</data>
      <data key="d7">I have some interesting thoughts on emergent microeconometric phenomena that would be fun to discuss sometime if you'd like. My background is predominantly in ML and Stats so I, too, am captured by these thoughts regulary.

Stumbled on this article this morning you might be interested: https://arstechnica.com/science/2018/09/quantum-observers-with-knowledge-of-quantum-mechanics-break-reality/
Maybe we aren't so crazy after all.</data>
      <data key="d8">431</data>
      <data key="d9">7.729</data>
      <data key="d10">0.0</data>
      <data key="d11">12.1</data>
      <data key="d12">0.3986</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c111">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6avuqw</data>
      <data key="d3">e6bkv3c</data>
      <data key="d4">timshoaf</data>
      <data key="d5">2</data>
      <data key="d6">1537485507.0</data>
      <data key="d7">Sometimes, /u/dancorbe, the most interesting of notions don't come from well thought through processes. The randomness of a drug fueled haze can--in the right hands--become a revelation. I like to view this as a social analogue to simulated annealing. Why build another wheel when the one we have works fine? Because I want to. Not because it is rational.

And that randomness provides just enough exploration in the explore exploit duality to get us out of a local minima.

Never discount the dreamers or the children, even if most dreams end up being wrong.</data>
      <data key="d8">559</data>
      <data key="d9">5.709</data>
      <data key="d10">0.0</data>
      <data key="d11">6.7</data>
      <data key="d12">0.1197</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c112">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6an7yd</data>
      <data key="d3">e6ars1e</data>
      <data key="d4">nupogodi</data>
      <data key="d5">15</data>
      <data key="d6">1537444479.0</data>
      <data key="d7">Sure but there's a limit through the pigeonhole principle.

Theoretically your simulation could run in an environment that is cleverer than the hardware of the machine and can optimize the simulated task to be more efficient than the same task on the hardware, this is where you get into cases where JITted code can be faster than native code because runtime optimizations can optimize out dead code that is only dead at runtime, or can more intelligently prime a branch predictor or what have you ---- but you have changed the rules of the game, since it's not the same task anymore (and you can still run the optimized task on the bare metal and it will in a physical world be faster or equal than the optimized task on a simulator). </data>
      <data key="d8">736</data>
      <data key="d9">7.789</data>
      <data key="d10">0.0</data>
      <data key="d11">27.7</data>
      <data key="d12">0.5382</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c113">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6an7yd</data>
      <data key="d3">e6bcfns</data>
      <data key="d4">nemec</data>
      <data key="d5">4</data>
      <data key="d6">1537477988.0</data>
      <data key="d7">What can you do with a compressed image? Nothing, until it's decompressed. So now the smaller image requires a decompression routine which limits performance. </data>
      <data key="d8">159</data>
      <data key="d9">5.955</data>
      <data key="d10">0.0</data>
      <data key="d11">7.6</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c114">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6acquo</data>
      <data key="d3">e6afc6p</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">12</data>
      <data key="d6">1537431856.0</data>
      <data key="d7">Yes, all information is energy. Think about it, how do you present any information about anything in the entire universe? Configuration of matter? EM wave? Neutrino signal? Displacement of the space time continuum? They're all different forms of energy.

How does it apply here? A computer that could simulate itself faster than it could run is better than a perpetual motion machine - it's a machine that generates more information than it started with from nothing - somehow the simulated machine would be generating information faster than the machine itself...but then the machine would be actually generating that information... but then the simulation would be faster still. It's a self-contradiction: we've proven a machine can't run faster than itself, even if it's simulating a computer.

The fastest possible 'computer in a computer' we have now is a hardware virtual machine, and despite running all the same instructions as the outer machine, even virtual machines have overhead - they have to translate memory accesses to ensure the guest machine can't violate the memory of the host machine (lest it corrupt either itself or some other process on the system). You can keep reducing that overhead, but you can't get rid of it. That overhead is essentially a physical manifestation of entropy - energy irretrievably lost to the disordering of the system.

Keep thinking about the problem and eventually you'll understand why this is a limitation of the actual universe, nothing special about computers being involved. It might help you to google [why you can't simulate the entire universe inside of the universe](http://wtamu.edu/~cbaird/sq/2014/09/15/could-scientists-perfectly-simulate-the-entire-universe-in-a-computer-down-to-the-last-atom/), e.g., it's a question that's pretty common to people new to physics.</data>
      <data key="d8">1828</data>
      <data key="d9">9.831</data>
      <data key="d10">0.0</data>
      <data key="d11">12.2</data>
      <data key="d12">0.1056</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c115">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6acquo</data>
      <data key="d3">e6af9kz</data>
      <data key="d4">revereddesecration</data>
      <data key="d5">7</data>
      <data key="d6">1537431786.0</data>
      <data key="d7">It's pretty clear that you need to read a book or two. I know, I know, I sound like a douche, but "information is energy" is basic computer science. It takes a minuscule but well defined minimum amount of energy to flip a bit in a perfect system. Something to do with Planck's constant I think? I need to brush up on this. </data>
      <data key="d8">323</data>
      <data key="d9">5.319</data>
      <data key="d10">0.0681</data>
      <data key="d11">4.7</data>
      <data key="d12">0.3954</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c116">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6acquo</data>
      <data key="d3">e6c00vm</data>
      <data key="d4">rhorama</data>
      <data key="d5">1</data>
      <data key="d6">1537497902.0</data>
      <data key="d7">&gt;all information is energy?

Yes. Read a book. 

&gt;Downvote if you wish but at least present a coherent argument. This is /r/compsci for afterall

Oh I've definitely been downvoting your tripe.

My argument: you clearly have no knowledge on information theory or computing theory. This is evident because you aren't even grasping the basics. 

Go read a book, or perhaps take a basic course on the topics and come back when you aren't arguing against thermodynamics.</data>
      <data key="d8">465</data>
      <data key="d9">6.15</data>
      <data key="d10">0.0</data>
      <data key="d11">7.5</data>
      <data key="d12">0.0815</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c117">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6abxik</data>
      <data key="d3">e6ad842</data>
      <data key="d4">_georgesim_</data>
      <data key="d5">6</data>
      <data key="d6">1537429779.0</data>
      <data key="d7">It’s also not a silver bullet and has very specific, concrete limitations. Not that you implied otherwise, but I thought it would be worth pointing out given the context.</data>
      <data key="d8">170</data>
      <data key="d9">4.452</data>
      <data key="d10">0.0</data>
      <data key="d11">7.8</data>
      <data key="d12">0.1646</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c118">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6abxik</data>
      <data key="d3">e6adjbr</data>
      <data key="d4">Little_Milton</data>
      <data key="d5">0</data>
      <data key="d6">1537430084.0</data>
      <data key="d7">Qbits scare me tho. Start talking about spins and I’m lost</data>
      <data key="d8">58</data>
      <data key="d9">3.615</data>
      <data key="d10">0.0</data>
      <data key="d11">-0.6</data>
      <data key="d12">-0.4939</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c119">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bypjq</data>
      <data key="d3">e6bypsv</data>
      <data key="d4">WikiTextBot</data>
      <data key="d5">1</data>
      <data key="d6">1537496808.0</data>
      <data key="d7">**P versus NP problem**

The P versus NP problem is a major unsolved problem in computer science. It asks whether every problem whose solution can be quickly verified (technically, verified in polynomial time) can also be solved quickly (again, in polynomial time).

The underlying issues were first discussed in the 1950s, in letters from John Forbes Nash Jr. to the National Security Agency, and from Kurt Gödel to John von Neumann.

***

^[ [^PM](https://www.reddit.com/message/compose?to=kittens_from_space) ^| [^Exclude ^me](https://reddit.com/message/compose?to=WikiTextBot&amp;message=Excludeme&amp;subject=Excludeme) ^| [^Exclude ^from ^subreddit](https://np.reddit.com/r/compsci/about/banned) ^| [^FAQ ^/ ^Information](https://np.reddit.com/r/WikiTextBot/wiki/index) ^| [^Source](https://github.com/kittenswolf/WikiTextBot)   ^]
^Downvote ^to ^remove ^| ^v0.28</data>
      <data key="d8">861</data>
      <data key="d9">10.515</data>
      <data key="d10">0.0</data>
      <data key="d11">15.6</data>
      <data key="d12">0.051</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c120">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6av3yl</data>
      <data key="d3">e6bsueu</data>
      <data key="d4">olliej</data>
      <data key="d5">2</data>
      <data key="d6">1537491975.0</data>
      <data key="d7">But the statement is a machine *simulating itself* that means you do have to track the full machine state. If your simulator is not tracing all state of what it is executing it is fundamentally simulating a different machine.

Once your simulator is not confined to matching the machine you're running on, the statement we're talking about is no longer applicable. You open up all sorts of optimizations that can be performed on an abstraction of the machine. e.g. on machines that have them you'd get a big win if you dropped updates to the status register unless you could prove they were needed. Or you have the multiply case I mentioned.

Basically in the context of things like this "simulator" is the theoretical definition: exact match of behavior, as opposed to emulating, which would bee "observable output is the same".

and again: any optimization your simulator is doing can be done in the native machine as well, at which point it will be at minimum just as fast as the simulated code (in practice it will *always* be faster)</data>
      <data key="d8">1038</data>
      <data key="d9">7.289</data>
      <data key="d10">0.0385</data>
      <data key="d11">10.9</data>
      <data key="d12">0.0486</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c121">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6av9la</data>
      <data key="d3">e6aximg</data>
      <data key="d4">khedoros</data>
      <data key="d5">1</data>
      <data key="d6">1537452367.0</data>
      <data key="d7">I can run an infinite number of emulations at infinite speed on a finite computer, if the only effect I'm simulating is a NOP instruction. There's the trivial counter-example to "must always run slower"...but I also take it to mean that that's not what the professor was claiming. Similarly, I think that speed-up to automatic optimization is *also* probably outside of the scope of the intended claim.

So, I'll turn to the wording of the quote. "Simulation" is used, in contrast to "emulation". And generally, simulation is taken to mean that you're modeling the internal states of the target system, while emulation means that you're modeling the external behavior of the target system. You can base an *emulator* around JIT, and produce a recreation of some computer's behavior by running equivalent faster code. But if you've got to maintain a simulation of the internal state of the system, I think it's safe to say that the simulation will run slower than the machine it's hosted on.</data>
      <data key="d8">990</data>
      <data key="d9">7.673</data>
      <data key="d10">0.0444</data>
      <data key="d11">10.5</data>
      <data key="d12">0.0971</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c122">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ap8hy</data>
      <data key="d3">e6bi72w</data>
      <data key="d4">singham</data>
      <data key="d5">1</data>
      <data key="d6">1537483280.0</data>
      <data key="d7">Found more information here.  

https://physics.stackexchange.com/questions/305602/conservation-of-information-and-determinism</data>
      <data key="d8">126</data>
      <data key="d9">23.6</data>
      <data key="d10">0.0</data>
      <data key="d11">52.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c123">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b0291</data>
      <data key="d3">e6b0pdd</data>
      <data key="d4">Oriumpor</data>
      <data key="d5">1</data>
      <data key="d6">1537458172.0</data>
      <data key="d7">except that's unordered data, effectively.  Now we're talking simulation design: Compression: gaseous fields are cheap to compress (think image compression schemes.)  Any homogenous mass could then be represented using fewer particles using a compression scheme. Optimizations: clearly there are unobserved parts of the universe we don't have to actually simulate, we can use macro-simulations until micro interactions cross some macro threshold/they're observed directly etc. Moreover, we can pick what an "observer" represents in the simulation and optimize the universe itself by not simulating unobserved events that would happen in isolation from any "relevant" observer.

This isn't an easy thing to just design in a Reddit post (lulz clearly) but you can see how there are ways that within the design constraints given it's still possible to simulate a universe *in* a universe.  The beauty of the simulation(s) from a cosmological perspective is that it's a nice thought experiment for lots of different problems.</data>
      <data key="d8">1021</data>
      <data key="d9">7.425</data>
      <data key="d10">0.0176</data>
      <data key="d11">13.0</data>
      <data key="d12">0.1844</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c124">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b244l</data>
      <data key="d3">e6b2xss</data>
      <data key="d4">pilotInPyjamas</data>
      <data key="d5">-6</data>
      <data key="d6">1537462981.0</data>
      <data key="d7">That depends. If your program is supposed to output the all of the intermediary states in addition to the final result, then OP's statement is trivially true, since it will take a long time just to perform the output, regardless of the underlying computation. However, if your program takes as an input a value `t` and returns the state of the computation at time `t`, then it may not need to take `t` time to return that result. We could calculate any state of that computer in O(1) time, but to run the actual program is O(t), so it is asymptotically faster to simulate than it would be to run directly. 

Edit: this is only for the specific case of the computer counting from 0 to 10^50. For arbitrary programs, this is obviously untrue.</data>
      <data key="d8">740</data>
      <data key="d9">6.733</data>
      <data key="d10">0.0</data>
      <data key="d11">12.6</data>
      <data key="d12">0.139</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c125">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b2v4d</data>
      <data key="d3">e6bh4cn</data>
      <data key="d4">singham</data>
      <data key="d5">1</data>
      <data key="d6">1537482357.0</data>
      <data key="d7">Not directly related but interesting nonetheless. 

https://physics.stackexchange.com/questions/257323/if-we-had-a-perfectly-efficient-computer-and-all-the-energy-in-the-milky-way-a</data>
      <data key="d8">181</data>
      <data key="d9">24.571</data>
      <data key="d10">0.0</data>
      <data key="d11">46.1</data>
      <data key="d12">0.5499</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c126">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b2v4d</data>
      <data key="d3">e6b37my</data>
      <data key="d4">pilotInPyjamas</data>
      <data key="d5">1</data>
      <data key="d6">1537463588.0</data>
      <data key="d7">That depends on how you define the simulation. At what granularity of time do you need to consider it properly simulated? You could simulate the state for each clock cycle of the CPU, but if you wanted to you could simulate a shorter time interval and emulate the physical properties of the silicon in the transistors. Alternatively, you could simulate the state of the CPU once per minute, or once per hour, and only try to calculate what is absolutely necessary to get those individual samples. Instead of writing about how granular we need our simulation, instead consider a program `p` which takes an input `t`, and returns the state of the computer at time `t`. For the contrived example I provided, `p` could run in O(1) time, whereas the actual program would run in O(t), making the simulation asymptotically faster.</data>
      <data key="d8">823</data>
      <data key="d9">7.371</data>
      <data key="d10">0.0</data>
      <data key="d11">12.5</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c127">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b3ftv</data>
      <data key="d3">e6b7f4b</data>
      <data key="d4">stringParameter</data>
      <data key="d5">2</data>
      <data key="d6">1537471826.0</data>
      <data key="d7">Sometimes you just need to go full-derp on a comment. It has to be done, no matter how many downvotes come your way.

My record is only like -66 or something though and that was a sensible comment (the person was being an absolute snowflake)</data>
      <data key="d8">241</data>
      <data key="d9">4.634</data>
      <data key="d10">0.0</data>
      <data key="d11">5.6</data>
      <data key="d12">-0.1366</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c128">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6afc6p</data>
      <data key="d3">e6ahu6k</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-9</data>
      <data key="d6">1537434306.0</data>
      <data key="d7">&gt; Yes, all information is energy. Think about it, **how do you *present* any information** about anything in the entire universe? Configuration of matter? EM wave? Neutrino signal? Displacement of the space time continuum? 

Do you disagree that it is possible to distinguish between information and the presentation of information/medium by which it is conveyed?</data>
      <data key="d8">363</data>
      <data key="d9">6.905</data>
      <data key="d10">0.0</data>
      <data key="d11">9.9</data>
      <data key="d12">0.0328</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c129">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6af9kz</data>
      <data key="d3">e6afy4p</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-6</data>
      <data key="d6">1537432461.0</data>
      <data key="d7">&gt; It's pretty clear that you need to read a book or two. 

It's pretty clear all you've *only* read but never tried to understand...

If the bits were randomly flipped on two hardrives, such that 1 hardrive was noise and the other was miraculously the completed works of shakespeare.

Which hard drive would contain more energy? And which hard drive would contain more information?</data>
      <data key="d8">381</data>
      <data key="d9">6.1</data>
      <data key="d10">0.0</data>
      <data key="d11">4.7</data>
      <data key="d12">0.2573</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c130">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c00vm</data>
      <data key="d3">e6c36ps</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">1</data>
      <data key="d6">1537500520.0</data>
      <data key="d7">&gt;you clearly have no knowledge on information theory or computing theory. This is evident because you aren't even grasping the basics.

That’s a circular argument. You should read a freshman philosophy book. They cover that basic stuff in the first chapter.
</data>
      <data key="d8">258</data>
      <data key="d9">5.385</data>
      <data key="d10">0.0</data>
      <data key="d11">7.7</data>
      <data key="d12">-0.0903</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c131">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ad842</data>
      <data key="d3">e6avsaa</data>
      <data key="d4">sn0rrlax</data>
      <data key="d5">2</data>
      <data key="d6">1537449639.0</data>
      <data key="d7">Of course. Was simply replying to “mind blowing way of making CPUs” idea. Why all these salty downvotes?</data>
      <data key="d8">104</data>
      <data key="d9">4.2</data>
      <data key="d10">0.0</data>
      <data key="d11">3.3</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c132">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bsueu</data>
      <data key="d3">e6bwwj3</data>
      <data key="d4">Sukrim</data>
      <data key="d5">1</data>
      <data key="d6">1537495291.0</data>
      <data key="d7">&gt; exact match of behavior

Then it is impossible to simulate a physical machine exactly, due to the Heisenberg uncertainty principle. You can only simulate an abstraction (e.g. a "CPU" that never overheats because the simulation has no concept of temperature). Then it only depends on where you draw that abstraction and this line is arbitrary at best.

I'm not arguing that it is possible in the general case to simulate something faster than itself - it is possible to be faster in some constructed cases if the simulation is imperfect or it is impossible to simulate to begin with. In both cases the initial statement "A computer can simulate itself, but that simulation must always run slower than the computer." is wrong or at least imprecise.</data>
      <data key="d8">748</data>
      <data key="d9">7.432</data>
      <data key="d10">0.131</data>
      <data key="d11">11.5</data>
      <data key="d12">0.0079</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c133">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aximg</data>
      <data key="d3">e6axzs7</data>
      <data key="d4">Sukrim</data>
      <data key="d5">2</data>
      <data key="d6">1537453179.0</data>
      <data key="d7">Often an idealized or abstracted system is being simulated (I have yet to see a Gameboy VM stop because its batteries were out of juice or because the cartridge had a bad contact) and if you take it to the extreme as I said actual simulation might not even be possible, since in the most extreme case you'd need to simulate quantum effects of atoms in the physical hardware which are currently assumed to be the closest thing to actual randomness we have.</data>
      <data key="d8">455</data>
      <data key="d9">5.677</data>
      <data key="d10">0.0</data>
      <data key="d11">34.5</data>
      <data key="d12">-0.4404</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c134">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b2xss</data>
      <data key="d3">e6bdcb4</data>
      <data key="d4">TKAAZ</data>
      <data key="d5">3</data>
      <data key="d6">1537478907.0</data>
      <data key="d7">This is undecidable though. Such an emulator would be an oracle, and is not possible.</data>
      <data key="d8">85</data>
      <data key="d9">5.231</data>
      <data key="d10">0.0</data>
      <data key="d11">7.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c135">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6b37my</data>
      <data key="d3">e6b3pqy</data>
      <data key="d4">Alaskan_Thunder</data>
      <data key="d5">3</data>
      <data key="d6">1537464693.0</data>
      <data key="d7">Yes, a program that returns the state of a cpu will have a different runtime than a program that counts to 10^50. </data>
      <data key="d8">114</data>
      <data key="d9">4.944</data>
      <data key="d10">0.0</data>
      <data key="d11">8.3</data>
      <data key="d12">0.4019</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c136">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ahu6k</data>
      <data key="d3">e6aiksf</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">7</data>
      <data key="d6">1537435022.0</data>
      <data key="d7">You can abstract information and say it's transmissible on any medium, but at the end of the day, the information is still represented in the universe by one of those mechanisms - matter, gravity, electromagnetic waves, etc.

Information is not ephemera, it's not its own field, it's not abstractable from the universe itself - it's a property of the configuration of the universe. You can think of it as the inverse of entropy - the order or disorder of the universe. These are all part of the basic definition of information.

You *really* need to read that information theory book.</data>
      <data key="d8">584</data>
      <data key="d9">7.281</data>
      <data key="d10">0.0</data>
      <data key="d11">10.9</data>
      <data key="d12">-0.0726</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c137">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6afy4p</data>
      <data key="d3">e6ag691</data>
      <data key="d4">revereddesecration</data>
      <data key="d5">8</data>
      <data key="d6">1537432683.0</data>
      <data key="d7">Let's talk about compression. The best compression maximises entropy, such that highly compressed data looks near indistinguishable from noise. Does perfectly compressed data cease to contain information?</data>
      <data key="d8">204</data>
      <data key="d9">7.25</data>
      <data key="d10">0.0</data>
      <data key="d11">9.2</data>
      <data key="d12">0.4246</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c138">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6afy4p</data>
      <data key="d3">e6agnjx</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">4</data>
      <data key="d6">1537433151.0</data>
      <data key="d7">&gt; Which hard drive would contain more energy? And which hard drive would contain more information?

How much energy do you think you expended to flip those bits into the new configuration, and why are you discounting that from your model of information here? If you could spontaneously order the drive, you'd essentially be implementing [Maxwell's Demon](https://en.wikipedia.org/wiki/Maxwell%27s_demon).

Here's a book on the [introduction to information theory](https://web.stanford.edu/~montanar/RESEARCH/BOOK/partA.pdf). You might find it useful.</data>
      <data key="d8">550</data>
      <data key="d9">8.088</data>
      <data key="d10">0.0</data>
      <data key="d11">11.4</data>
      <data key="d12">0.1074</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c139">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bwwj3</data>
      <data key="d3">e6c2gvu</data>
      <data key="d4">olliej</data>
      <data key="d5">1</data>
      <data key="d6">1537499927.0</data>
      <data key="d7">&gt; Then it is impossible to simulate a physical machine exactly, due to the Heisenberg uncertainty principle.

Heisenberg principle only applies to very small scale interactions, but yes an "exact" physical simulation of any process rapidly becomes impossible as you scale up the size (see passage at the end).

The statement "a computer can simulate itself, but that simulation must alway run slower than the computer" relates to a theoretical model of a computer system, which is essentially a set of state transitions. So to simulate a computer in a theoretical context just means to simulate the state transitions, so no worrying about physical effects.

Generally however the requirement (time/space) of your simulation increase the closer you get progressively more significant as you get ever closer to "perfect", so eventually if you get down to simulating the atomic interactions in your computer (because you're insane? :D ) and you'd need to worry about quantum interactions. At that point though you're pretty much simulating a quantum computer and there have been numerous papers showing that simulating a quantum computer *requires* a quantum computer. I think the logical result is that no non-quantum computer could ever *exactly* simulate itself (or any other machine).
</data>
      <data key="d8">1286</data>
      <data key="d9">8.957</data>
      <data key="d10">0.0824</data>
      <data key="d11">15.4</data>
      <data key="d12">-0.0664</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c140">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6axzs7</data>
      <data key="d3">e6azdhd</data>
      <data key="d4">khedoros</data>
      <data key="d5">1</data>
      <data key="d6">1537455599.0</data>
      <data key="d7">&gt; I have yet to see a Gameboy VM stop because its batteries were out of juice or because the cartridge had a bad contact

You've given me ideas for new features in my emulator ;-)

&gt; since in the most extreme case you'd need to simulate quantum effects of atoms in the physical hardware which are currently assumed to be the closest thing to actual randomness we have.

Sounds like it's fair to say that there are many definitions (starting at reasonable and going all the way to extreme) of "simulation" that would require the simulation to run slower than the host. And maybe that's the key shortcoming of the question: It doesn't sufficiently define its terms.</data>
      <data key="d8">663</data>
      <data key="d9">5.989</data>
      <data key="d10">0.0166</data>
      <data key="d11">17.0</data>
      <data key="d12">-0.035</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c141">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6bdcb4</data>
      <data key="d3">e6bdmda</data>
      <data key="d4">pilotInPyjamas</data>
      <data key="d5">0</data>
      <data key="d6">1537479182.0</data>
      <data key="d7">For the general case, you're correct. For specific cases, you can definitely tell if a certain variable is required. Optimising compilers do this. I only provided a single example of a specific program that could be optimised by static analysis. Change that example to a turing machine and all bets are off.</data>
      <data key="d8">307</data>
      <data key="d9">5.533</data>
      <data key="d10">0.0</data>
      <data key="d11">8.5</data>
      <data key="d12">0.2779</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c142">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aiksf</data>
      <data key="d3">e6aj2e8</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-2</data>
      <data key="d6">1537435505.0</data>
      <data key="d7">If the bits were randomly flipped on two hardrives, such that 1 hardrive was noise and the other was miraculously the completed works of shakespeare.

Which hard drive would contain more energy? And which hard drive would contain more information?

</data>
      <data key="d8">249</data>
      <data key="d9">6.344</data>
      <data key="d10">0.0</data>
      <data key="d11">6.1</data>
      <data key="d12">0.0486</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c143">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ag691</data>
      <data key="d3">e6aglkv</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-2</data>
      <data key="d6">1537433098.0</data>
      <data key="d7">&gt;Does perfectly compressed data cease to contain information?

It depends if you define information as an objective quality or as a function of it's utility 
</data>
      <data key="d8">158</data>
      <data key="d9">5.609</data>
      <data key="d10">0.0</data>
      <data key="d11">10.5</data>
      <data key="d12">0.6369</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c144">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6agnjx</data>
      <data key="d3">e6ah7yf</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">0</data>
      <data key="d6">1537433704.0</data>
      <data key="d7">&gt; How much energy do you think you expended to flip those bits into the new configuration, and why are you discounting that from your model of information here?

What makes you think I am doing that???? Both drives achieved their configuration by using the same energy </data>
      <data key="d8">269</data>
      <data key="d9">5.632</data>
      <data key="d10">0.0</data>
      <data key="d11">8.1</data>
      <data key="d12">0.1366</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c145">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c2gvu</data>
      <data key="d3">e6c3a2f</data>
      <data key="d4">Sukrim</data>
      <data key="d5">1</data>
      <data key="d6">1537500595.0</data>
      <data key="d7">&gt; simulating a quantum computer requires a quantum computer

Luckily: No. :-) It will just be insanely slow.

Here's an implementation that's already over a decade in development at http://www.libquantum.de/ for example.

&gt; So to simulate a computer in a theoretical context just means to simulate the state transitions, so no worrying about physical effects.

In that case you get back into "if a tree falls over in the wood and nobody hears it, does it make a sound?" territory. Meaning: If you are able to query your simulation at arbitrary points and you get the same state as on a "real" system returned, is the simulation already correct **or** do you actually first have to simulate all states up to this point as well - even if there would be a shortcut and the extra work is demonstrably pointless?

Imagine simulating a program that runs in a 100 instructions loop. it would be trivial to write a "simulator" that can tell you exactly how the system state after 10 billion loops would look like, how the previous (and the next) state would look like as well and also querying each other thinkable state could be done in near constant time. The real system however would take longer, the further out you want to query state (in O(n)).</data>
      <data key="d8">1243</data>
      <data key="d9">7.19</data>
      <data key="d10">0.0732</data>
      <data key="d11">10.5</data>
      <data key="d12">-0.0064</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c146">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aj2e8</data>
      <data key="d3">e6ajnnd</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">5</data>
      <data key="d6">1537436079.0</data>
      <data key="d7">How long would I need to flip the bits of a hard drive to represent the works of Shakespeare? How much energy would it cost?

edit: What, are you afraid to answer my question? I answered yours.</data>
      <data key="d8">193</data>
      <data key="d14">5</data>
      <data key="d10">0.0</data>
      <data key="d11">2.2</data>
      <data key="d12">0.0426</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c147">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ah7yf</data>
      <data key="d3">e6ahqto</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">2</data>
      <data key="d6">1537434213.0</data>
      <data key="d7">While this is theoretically possible, it's ridiculously, absurdly, not-worth-discussingly improbable. Given all bits on the drives are equally likely to be zeros or ones, to generate Shakespeare would be similar to shaking all of the grains of sand on a beach and them spontaneously building a sandcastle the size of Buckingham Palace. You'd expend more energy than the universe has to get the drive into that state.

I'd tell you to try it and come back, but you'd likely be dead before you completed even a single book of Shakespeare's sonnets.

Seriously, go read that book on information theory. It'll revolutionize your thinking.</data>
      <data key="d8">634</data>
      <data key="d9">6.475</data>
      <data key="d10">0.0</data>
      <data key="d11">10.0</data>
      <data key="d12">-0.1908</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c148">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c3a2f</data>
      <data key="d3">e6c4h0s</data>
      <data key="d4">olliej</data>
      <data key="d5">1</data>
      <data key="d6">1537501573.0</data>
      <data key="d7">&gt; Luckily: No. :-) It will just be insanely slow.

The problem is the simulating a quantum computer on a classical computer requires an exponential amount of state, it's not just a time complexity, but rather you very rapidly reach the point where it is not possible for a classical computer to simulate a plausible quantum computer due to constraints along the lines of "the size of the universe" :D

&gt; In that case you get back into "if a tree falls over in the wood and nobody hears it, does it make a sound?" territory.  ... even if there would be a shortcut and the extra work is demonstrably pointless?

But the extra work isn't demonstrably pointless as by definition you must be able to halt the simulation at any state to verify it is indeed the correct state. The obvious "fix" is to optimise and if paused rollback the state, but due to one way operations that will require storing prior states, which you would then have to re-execute the correct state transitions from.

And again, if your simulator is capable of running the code faster by performing transformations on them, then the host computer is *by definition* capable of performing the same transformations itself, and you get back to the host computer and the simulator running identical code. But again the simulator can at best only perform as fast as the host.

I suspect there's also something like "on average across all programs the average per-instruction cost inside the simulator is higher than on the host" in some paper somewhere.

Alternatively the whole "recursive simulation produces infinitely fast code execution" is considered sufficiently self explanatory to avoid the need for any further proof :D</data>
      <data key="d8">1689</data>
      <data key="d9">8.432</data>
      <data key="d10">0.1646</data>
      <data key="d11">15.5</data>
      <data key="d12">0.2237</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c149">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ajnnd</data>
      <data key="d3">e6ak605</data>
      <data key="d4">DerSkagg</data>
      <data key="d5">3</data>
      <data key="d6">1537436580.0</data>
      <data key="d7">Not the op, but for clarity sake they are arguing from false pretenses.

Assume drive A and drive B are similar in all mechanical aspects. 

Let's then assume that both drives are being written at the same time, 1 bit takes some energy calculation from Landauer's Principle... and at the end of the writing. 

Drive A contains noise, Drive B contains Shakespeare. 

The problem that arises is their definition of information... 

Edit: and their lack of a definition of how the drives are being written.

Edit2: Probably a reference to Maxwell's demon.</data>
      <data key="d8">552</data>
      <data key="d9">6.567</data>
      <data key="d10">0.0</data>
      <data key="d11">6.6</data>
      <data key="d12">-0.0803</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c150">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ajnnd</data>
      <data key="d3">e6al8hy</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-3</data>
      <data key="d6">1537437633.0</data>
      <data key="d7">&gt; How long would I need to flip the bits of a hard drive to represent the works of Shakespeare? How much energy would it cost?

&gt; edit: What, are you afraid to answer my question? I answered yours.

You've already contradicted yourself in [a previous comment](https://www.reddit.com/r/compsci/comments/9h8t0k/i_heard_a_professor_say_a_computer_can_simulate/e6akm9e/) but since you saw it fit to try to condescend me, I'm happy to return the favor. Besides, it seems like you could use some practice forming arguments. This will come in handy when you graduate. 

So, to answer your question, the time required and the energy expended is irrelevant as long as it's the same for both drives. If you find this answer unsatisfactory, feel free to call it 1 unit of time and energy required. </data>
      <data key="d8">787</data>
      <data key="d9">7.322</data>
      <data key="d10">0.0</data>
      <data key="d11">8.0</data>
      <data key="d12">0.1484</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c151">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ahqto</data>
      <data key="d3">e6aigkr</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">0</data>
      <data key="d6">1537434907.0</data>
      <data key="d7">&gt; not-worth-discussingly improbable

Well now, this is a surprisingly anti-intellectual statement from someone whose last remark is "go read a book".

You've come this far, why are you suddenly scared to answer a simple hypothetical question that cuts to the heart of the matter and elucidates *your understanding* of the nature of information and energy???

Tell me, *which hard drive would contain more energy and which hard drive would contain more information?*</data>
      <data key="d8">465</data>
      <data key="d9">7.231</data>
      <data key="d10">0.0323</data>
      <data key="d11">12.5</data>
      <data key="d12">0.0738</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c152">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c4h0s</data>
      <data key="d3">e6c5yvw</data>
      <data key="d4">Sukrim</data>
      <data key="d5">1</data>
      <data key="d6">1537502800.0</data>
      <data key="d7">&gt; But the extra work isn't demonstrably pointless as by definition you must be able to halt the simulation at any state to verify it is indeed the correct state. The obvious "fix" is to optimise and if paused rollback the state, but due to one way operations that will require storing prior states, which you would then have to re-execute the correct state transitions from.

It would be a trivial operation to get any (deterministic) state in near constant time for an endless loop or any other program where you can reduce its state to a constant time algorithm instead of just its result (if you care about state instead of just results).

Since we're probably talking about something that's close to Turing machines (modulo infinite storage), the capabilities of the system are anyways not that much of a concern - the speed of the simulation is.

&gt; Alternatively the whole "recursive simulation produces infinitely fast code execution" is considered sufficiently self explanatory to avoid the need for any further proof :D

Having a simulated program run faster than the original doesn't mean that simulating this program in a simulated simulator would give the same benefits. If the initial implementation is just slow and a simulator speeds it up to its limits, it just means that the initial program for whatever reason was inefficient - not that the simulator would recursively do magic. You don't JIT compile JIT compiled code and expect it to be faster, you can however get faster code with a JIT compiler.</data>
      <data key="d8">1517</data>
      <data key="d9">7.942</data>
      <data key="d10">0.0428</data>
      <data key="d11">17.4</data>
      <data key="d12">0.1595</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c153">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ak605</data>
      <data key="d3">e6alu3s</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">0</data>
      <data key="d6">1537438230.0</data>
      <data key="d7">&gt;they are arguing from false pretenses.

Exactly what do you mean by this?

&gt;The problem that arises is their definition of information...

I've not provided definition of information. 

&gt;Edit: and their lack of a definition of how the drives are being written. 

The exact method, time, and energy required are irrelevant so long as it is the same for both drives. </data>
      <data key="d8">366</data>
      <data key="d9">5.979</data>
      <data key="d10">0.0</data>
      <data key="d11">6.1</data>
      <data key="d12">-0.0894</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c154">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6al8hy</data>
      <data key="d3">e6am84h</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">2</data>
      <data key="d6">1537438626.0</data>
      <data key="d7">&gt; If you find this answer unsatisfactory, feel free to call it 1 unit of time and energy required. 

Please represent that unit in terms we can discuss scientifically. I'll accept any SI units you find appropriate. Until you come back to science, I can't have a rational discussion with you.</data>
      <data key="d8">291</data>
      <data key="d9">5.273</data>
      <data key="d10">0.0</data>
      <data key="d11">8.2</data>
      <data key="d12">0.3399</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c155">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6aigkr</data>
      <data key="d3">e6ajfc6</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">4</data>
      <data key="d6">1537435855.0</data>
      <data key="d7">If you could do it, the drive with Shakespeare contains more information since it's in a more ordered state, but both drives contain exactly the same amount of energy. Just like my sandcastle experiment - the sandcastle is a higher state of order, so it contains more information...

Unfortunately, to get there, you've burned several universes of energy... so even answering your question is yielding to absurdity. You're asking me to answer a question that's couched on a bad assumption - that you can somehow spontaneously order a drive with Shakespeare through any given random process. I've spent *several comments* now trying to explain why.

That's *why* I'm telling you to read a book - so that you can understand why *the question you're asking* is broken. You are missing the foundation of the puzzle - that order in the universe *always decreases over time*, that scrambling matter *increases entropy over time*. Infinite monkeys typing yielding a monkey that makes Shakespeare is a fun thought experiment, but once you understand information theory, you understand why it's silly to rely on it - the heat death of the universe will catch up to you long before you get there.

I'm pretty much done responding to you. I decided to check your post history and I'm not surprised by what I found there, either... Arguing with someone that doesn't understand the fundamentals of the question that's being asked is like trying to argue with a brick wall - I'm not afraid of doing it, I just realize what an absolute waste of time it is.

Read the book. Get some understanding about how the universe works and why your question is absurd. Try to find some reason.</data>
      <data key="d8">1667</data>
      <data key="d9">8.434</data>
      <data key="d10">0.0</data>
      <data key="d11">9.4</data>
      <data key="d12">-0.1144</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c156">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6am84h</data>
      <data key="d3">e6amhq5</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-1</data>
      <data key="d6">1537438898.0</data>
      <data key="d7">&gt;I'll accept any SI units you find appropriate.

Each drive requires *exactly* 1 second and 1 joule to achieve it's configuration. 

Commence the rational discussion!

:)</data>
      <data key="d8">170</data>
      <data key="d9">5.4</data>
      <data key="d10">0.0</data>
      <data key="d11">7.7</data>
      <data key="d12">0.1273</data>
      <data key="d13">Positive</data>
    </node>
    <node id="c157">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6ajfc6</data>
      <data key="d3">e6akm9e</data>
      <data key="d4">Anonymous</data>
      <data key="d5">0</data>
      <data key="d6">1537437027.0</data>
      <data key="d7">[removed]</data>
      <data key="d8">9</data>
      <data key="d14">7</data>
      <data key="d10">0.0</data>
      <data key="d11">8.4</data>
      <data key="d12">0.0</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c158">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6akm9e</data>
      <data key="d3">e6amdbq</data>
      <data key="d4">hackingdreams</data>
      <data key="d5">5</data>
      <data key="d6">1537438773.0</data>
      <data key="d7">&gt; I understand if your too embarrassed to respond. Not only that, it's probably past your bedtime, no? 

And now you're reported for harassment. I've already taken you to school tonight. The fact you don't want to learn is not my problem anymore.

You're now blocked.</data>
      <data key="d8">267</data>
      <data key="d9">5.25</data>
      <data key="d10">0.0</data>
      <data key="d11">3.9</data>
      <data key="d12">-0.2024</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c159">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6amdbq</data>
      <data key="d3">e6antff</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">-1</data>
      <data key="d6">1537440218.0</data>
      <data key="d7">&gt; And now you're reported for harassment. I've already taken you to school tonight. The fact you don't want to learn is not my problem anymore.
&gt; 
&gt; You're now blocked.

Well this is all rather childish of you! Especially since you saw it fit to try to condescend me at every chance. Perhaps in the future you'll show a little caution in telling *other people* they should read more :)</data>
      <data key="d8">385</data>
      <data key="d9">5.119</data>
      <data key="d10">0.0</data>
      <data key="d11">3.5</data>
      <data key="d12">-0.0192</data>
      <data key="d13">Neutral</data>
    </node>
    <node id="c160">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6antff</data>
      <data key="d3">e6c057b</data>
      <data key="d4">rhorama</data>
      <data key="d5">1</data>
      <data key="d6">1537498000.0</data>
      <data key="d7">Your comment got removed because it was rude. You've been nothing but an ignorant condescending asshole in this entire thread. Nobody wants to even engage with you to tell you why you're wrong because it'd be like trying to explain to someone covered in shit why they smell.

Sure you might be able to do it eventually but you'd actually have to get near them and talk to them. </data>
      <data key="d8">378</data>
      <data key="d9">5.63</data>
      <data key="d10">0.0</data>
      <data key="d11">7.7</data>
      <data key="d12">-0.1035</data>
      <data key="d13">Negative</data>
    </node>
    <node id="c161">
      <data key="d0" />
      <data key="d1" />
      <data key="d2">e6c057b</data>
      <data key="d3">e6c2giu</data>
      <data key="d4">ebolanurse</data>
      <data key="d5">1</data>
      <data key="d6">1537499919.0</data>
      <data key="d7">&gt;You've been nothing but an ignorant condescending asshole in this entire thread. 

Excuse me? Show me where I was rude to someone who didn’t start off by telling me I needed to “read a book” since my questions were apparently so uninformed. 

&gt;Nobody wants to even engage with you to tell you why you're wrong because it'd be like trying to explain to someone covered in shit why they smell.

Just admit you don’t understand the topic enough to effectively engage my argument. Why are you playing this game where you whine about how I’m too dumb to understand your superior intellect. </data>
      <data key="d8">586</data>
      <data key="d9">5.607</data>
      <data key="d10">0.0</data>
      <data key="d11">8.9</data>
      <data key="d12">0.0694</data>
      <data key="d13">Positive</data>
    </node>
    <node id="ar162">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hf9ch</data>
      <data key="d15">How would you approach the problem of fake news detection in real time?</data>
      <data key="d16">0</data>
    </node>
    <node id="c163" />
    <node id="c164" />
    <node id="c165" />
    <node id="c166" />
    <node id="c167" />
    <node id="c168" />
    <node id="ar169">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hj204</data>
      <data key="d15">Relationship between Integral (Calculus) and Information Technology</data>
      <data key="d16">0</data>
    </node>
    <node id="c170" />
    <node id="ar171">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hj4st</data>
      <data key="d15">Learning CS vs Gettin better grade in a class</data>
      <data key="d16">0</data>
    </node>
    <node id="c172" />
    <node id="c173" />
    <node id="ar174">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hihme</data>
      <data key="d15">any website that offers student package to university student or anything helpfull</data>
      <data key="d16">0</data>
    </node>
    <node id="ar175">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hhebf</data>
      <data key="d15">Can One Of You Guys Help Me Construct a Logic Circuit From This Table?</data>
      <data key="d16">0</data>
    </node>
    <node id="c176" />
    <node id="c177" />
    <node id="ar178">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9h9dwo</data>
      <data key="d15">Physical size of an image located on a hard drive?</data>
      <data key="d16">0</data>
    </node>
    <node id="c179" />
    <node id="ar180">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hkkxq</data>
      <data key="d15">Computer science vs electrical engineering help</data>
      <data key="d16">0</data>
    </node>
    <node id="c181" />
    <node id="ar182">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hhk3n</data>
      <data key="d15">Is there any way to check the similiarity of two sentences?</data>
      <data key="d16">0</data>
    </node>
    <node id="c183" />
    <node id="c184" />
    <node id="c185" />
    <node id="c186" />
    <node id="c187" />
    <node id="c188" />
    <node id="c189" />
    <node id="c190" />
    <node id="c191" />
    <node id="c192" />
    <node id="c193" />
    <node id="c194" />
    <node id="c195" />
    <node id="c196" />
    <node id="c197" />
    <node id="c198" />
    <node id="c199" />
    <node id="ar200">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hjft8</data>
      <data key="d15">Math in CS vs Math in CompEng</data>
      <data key="d16">0</data>
    </node>
    <node id="c201" />
    <node id="c202" />
    <node id="ar203">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hhp2v</data>
      <data key="d15">Selected a wrong project for Thesis and now I am in trouble</data>
      <data key="d16">0</data>
    </node>
    <node id="ar204">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9hf0to</data>
      <data key="d15">Are there Computer Science Podcasts with coding best practices</data>
      <data key="d16">0</data>
    </node>
    <node id="c205" />
    <node id="c206" />
    <node id="c207" />
    <node id="c208" />
    <node id="c209" />
    <node id="c210" />
    <node id="ar211">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9h8hge</data>
      <data key="d15">Do you want me to connect you to software engineers to teach you to code?</data>
      <data key="d16">0</data>
    </node>
    <node id="c212" />
    <node id="ar213">
      <data key="d0" />
      <data key="d1" />
      <data key="d3">9h8t0k</data>
      <data key="d15">I heard a professor say "A computer can simulate itself, but that simulation must always run slower than the computer." but what does that mean? Is this a law?</data>
      <data key="d16">0</data>
    </node>
    <node id="c214" />
    <node id="c215" />
    <node id="c216" />
    <node id="c217" />
    <node id="c218" />
    <node id="c219" />
    <node id="c220" />
    <node id="c221" />
    <node id="c222" />
    <node id="c223" />
    <node id="c224" />
    <node id="c225" />
    <node id="c226" />
    <node id="c227" />
    <node id="c228" />
    <node id="c229" />
    <node id="c230" />
    <node id="c231" />
    <node id="c232" />
    <node id="c233" />
    <node id="c234" />
    <node id="c235" />
    <node id="c236" />
    <node id="c237" />
    <node id="c238" />
    <node id="c239" />
    <node id="c240" />
    <node id="c241" />
    <node id="c242" />
    <node id="Negative">
      <data key="d0">Negative</data>
      <data key="d1" />
    </node>
    <node id="Neutral">
      <data key="d0">Neutral</data>
      <data key="d1" />
    </node>
    <node id="Positive">
      <data key="d0">Positive</data>
      <data key="d1" />
    </node>
    <node id="eternusvia" />
    <node id="theblacklounge" />
    <node id="flexibeast" />
    <node id="almostinvisible" />
    <node id="wakka54" />
    <node id="bradcroteau" />
    <node id="Andy_Reds" />
    <node id="WhackAMoleE" />
    <node id="GhostFoxGod" />
    <node id="theblacklounge" />
    <node id="theblacklounge" />
    <node id="DarthSanity" />
    <node id="MemesEngineer" />
    <node id="bach2o" />
    <node id="cristianontivero" />
    <node id="nakayamakai88" />
    <node id="SpecialCustard" />
    <node id="fakefactfrank" />
    <node id="fnovd" />
    <node id="mrexodia" />
    <node id="reasonably_plausible" />
    <node id="emotionalmugger" />
    <node id="ghedipunk" />
    <node id="nerdshark" />
    <node id="Vityou" />
    <node id="HelenKellersBhole" />
    <node id="wtallis" />
    <node id="krum" />
    <node id="coterminous_regret" />
    <node id="umib0zu" />
    <node id="practicalutilitarian" />
    <node id="helpfulsj" />
    <node id="SideburnsOfDoom" />
    <node id="knot_hk" />
    <node id="slashcom" />
    <node id="scottyler89" />
    <node id="postisapostisapost" />
    <node id="MirrorLake" />
    <node id="shponglespore" />
    <node id="hashestohashes" />
    <node id="beeskness420" />
    <node id="pacmanrva" />
    <node id="Carpetfizz" />
    <node id="TheCriticalSkeptic" />
    <node id="laerien" />
    <node id="ShadyDaDev" />
    <node id="fearsneakta" />
    <node id="grasseffect" />
    <node id="GhostFoxGod" />
    <node id="FliesMoreCeilings" />
    <node id="xShadowProclamationx" />
    <node id="IdiocyInAction" />
    <node id="dataisthething" />
    <node id="GhostFoxGod" />
    <node id="dataisthething" />
    <node id="llN3M3515ll" />
    <node id="tfofurn" />
    <node id="type1advocate" />
    <node id="ogre14t" />
    <node id="Isvara" />
    <node id="LongjumpingEnergy" />
    <node id="insburgnis" />
    <node id="mcandre" />
    <node id="Sqeaky" />
    <node id="tfofurn" />
    <node id="Andy_Reds" />
    <node id="clownshoesrock" />
    <node id="TheMasterBaker01" />
    <node id="hypermog" />
    <node id="nanodano" />
    <node id="olliej" />
    <node id="p_pistol" />
    <node id="Dev__" />
    <node id="alvahrow" />
    <node id="Dustin-" />
    <node id="spacemoses" />
    <node id="ralphredosoprano" />
    <node id="cpdean" />
    <node id="Reddit1990" />
    <node id="SteeleDynamics" />
    <node id="almostinvisible" />
    <node id="macnlz" />
    <node id="wannagetbaked" />
    <node id="teawreckshero" />
    <node id="tsvk" />
    <node id="brett_riverboat" />
    <node id="agumonkey" />
    <node id="Laafheid" />
    <node id="superjimmyplus" />
    <node id="MjrK" />
    <node id="taratoni" />
    <node id="I_edit_comments_bad" />
    <node id="pandasashu" />
    <node id="ocean07" />
    <node id="Kulhu" />
    <node id="fourdebt" />
    <node id="generic12345689" />
    <node id="Causative" />
    <node id="roscoe_e_roscoe" />
    <node id="voneger" />
    <node id="znegva" />
    <node id="TheoreticalFunk" />
    <node id="djimbob" />
    <node id="Veedrac" />
    <node id="NowImAllSet" />
    <node id="CowboyFromSmell" />
    <node id="loamfarer" />
    <node id="bloatedfrog" />
    <node id="bo0mb0om" />
    <node id="ThePeskyWabbit" />
    <node id="t_bptm" />
    <node id="SuperGameTheory" />
    <node id="c3534l" />
    <node id="zck" />
    <node id="hnerixh" />
    <node id="wasimwesley" />
    <node id="CowboyFromSmell" />
    <node id="Sukrim" />
    <node id="mulletlaw" />
    <node id="agumonkey" />
    <node id="daviegravee" />
    <node id="singham" />
    <node id="sheikhy_jake" />
    <node id="MjrK" />
    <node id="ctchalk" />
    <node id="hackingdreams" />
    <node id="mistahspecs" />
    <node id="olliej" />
    <node id="znegva" />
    <node id="Putnam3145" />
    <node id="TKAAZ" />
    <node id="sheikhy_jake" />
    <node id="SirClueless" />
    <node id="MjrK" />
    <node id="voidmechanic" />
    <node id="timshoaf" />
    <node id="knot_hk" />
    <node id="hackingdreams" />
    <node id="trex-eaterofcadrs" />
    <node id="Little_Milton" />
    <node id="olliej" />
    <node id="hackingdreams" />
    <node id="barsoap" />
    <node id="krimin_killr21" />
    <node id="olliej" />
    <node id="khedoros" />
    <node id="technocapital" />
    <node id="Dev__" />
    <node id="EldritchSundae" />
    <node id="Kaon_Particle" />
    <node id="Reddit1990" />
    <node id="WikiTextBot" />
    <node id="Oriumpor" />
    <node id="richardathome" />
    <node id="Oriumpor" />
    <node id="CowboyFromSmell" />
    <node id="loamfarer" />
    <node id="umpc" />
    <node id="pilotInPyjamas" />
    <node id="stringParameter" />
    <node id="SuperGameTheory" />
    <node id="dancorbe" />
    <node id="ebolanurse" />
    <node id="ebolanurse" />
    <node id="sn0rrlax" />
    <node id="Anonymous" />
    <node id="Sukrim" />
    <node id="Sukrim" />
    <node id="Sukrim" />
    <node id="MjrK" />
    <node id="hackingdreams" />
    <node id="mistahspecs" />
    <node id="p_pistol" />
    <node id="olliej" />
    <node id="sheikhy_jake" />
    <node id="Alaskan_Thunder" />
    <node id="TKAAZ" />
    <node id="voidmechanic" />
    <node id="timshoaf" />
    <node id="timshoaf" />
    <node id="nupogodi" />
    <node id="nemec" />
    <node id="hackingdreams" />
    <node id="revereddesecration" />
    <node id="rhorama" />
    <node id="_georgesim_" />
    <node id="Little_Milton" />
    <node id="WikiTextBot" />
    <node id="olliej" />
    <node id="khedoros" />
    <node id="singham" />
    <node id="Oriumpor" />
    <node id="pilotInPyjamas" />
    <node id="singham" />
    <node id="pilotInPyjamas" />
    <node id="stringParameter" />
    <node id="ebolanurse" />
    <node id="ebolanurse" />
    <node id="ebolanurse" />
    <node id="sn0rrlax" />
    <node id="Sukrim" />
    <node id="Sukrim" />
    <node id="TKAAZ" />
    <node id="Alaskan_Thunder" />
    <node id="hackingdreams" />
    <node id="revereddesecration" />
    <node id="hackingdreams" />
    <node id="olliej" />
    <node id="khedoros" />
    <node id="pilotInPyjamas" />
    <node id="ebolanurse" />
    <node id="ebolanurse" />
    <node id="ebolanurse" />
    <node id="Sukrim" />
    <node id="hackingdreams" />
    <node id="hackingdreams" />
    <node id="olliej" />
    <node id="DerSkagg" />
    <node id="ebolanurse" />
    <node id="ebolanurse" />
    <node id="Sukrim" />
    <node id="ebolanurse" />
    <node id="hackingdreams" />
    <node id="hackingdreams" />
    <node id="ebolanurse" />
    <node id="Anonymous" />
    <node id="hackingdreams" />
    <node id="ebolanurse" />
    <node id="rhorama" />
    <node id="ebolanurse" />
    <edge source="c0" target="c1">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c0" target="ar162">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c0" target="Neutral">
      <data key="d18">0.0124</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c0" target="theblacklounge">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c1" target="c4">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c1" target="ar162">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c1" target="Positive">
      <data key="d18">0.3186</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c1" target="GhostFoxGod">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c2" target="c3">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c2" target="ar162">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c2" target="Negative">
      <data key="d18">-0.3287</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c2" target="WhackAMoleE">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c3" target="ar162">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c3" target="Negative">
      <data key="d18">-0.33</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c3" target="theblacklounge">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c4" target="ar162">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c4" target="Positive">
      <data key="d18">0.2439</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c4" target="theblacklounge">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c5" target="c6">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c5" target="ar169">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c5" target="Positive">
      <data key="d18">0.0518</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c5" target="DarthSanity">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c6" target="ar169">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c6" target="Positive">
      <data key="d18">0.4109</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c6" target="bach2o">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c7" target="c8">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c7" target="ar174">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c7" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c7" target="SpecialCustard">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c8" target="ar174">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c8" target="Positive">
      <data key="d18">0.8268</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c8" target="fakefactfrank">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c9" target="c10">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c9" target="ar175">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c9" target="Positive">
      <data key="d18">0.2197</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c9" target="mrexodia">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c10" target="ar175">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c10" target="Positive">
      <data key="d18">0.6801</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c10" target="emotionalmugger">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c11" target="c12">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c11" target="ar178">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c11" target="Positive">
      <data key="d18">0.0843</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c11" target="ghedipunk">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c12" target="ar178">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c12" target="Positive">
      <data key="d18">0.4199</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c12" target="HelenKellersBhole">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c13" target="c14">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c13" target="ar178">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c13" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c13" target="nerdshark">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c14" target="ar178">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c14" target="Neutral">
      <data key="d18">-0.0411</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c14" target="wtallis">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c15" target="c16">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c15" target="ar182">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c15" target="Neutral">
      <data key="d18">0.0437</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c15" target="umib0zu">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c16" target="ar182">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c16" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c16" target="grasseffect">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c17" target="c18">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c17" target="ar182">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c17" target="Positive">
      <data key="d18">0.2275</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c17" target="MirrorLake">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c18" target="c19">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c18" target="ar182">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c18" target="Positive">
      <data key="d18">0.6597</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c18" target="GhostFoxGod">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c19" target="ar182">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c19" target="Negative">
      <data key="d18">-0.068</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c19" target="FliesMoreCeilings">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c20" target="c21">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c20" target="ar203">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c20" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c20" target="dataisthething">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c21" target="c22">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c21" target="ar203">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c21" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c21" target="GhostFoxGod">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c22" target="ar203">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c22" target="Positive">
      <data key="d18">0.4019</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c22" target="dataisthething">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c23" target="c24">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c23" target="ar204">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c23" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c23" target="tfofurn">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c24" target="ar204">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c24" target="Positive">
      <data key="d18">0.2426</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c24" target="Sqeaky">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c25" target="c26">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c25" target="ar204">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c25" target="Negative">
      <data key="d18">-0.1779</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c25" target="Isvara">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c26" target="ar204">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c26" target="Negative">
      <data key="d18">-0.0516</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c26" target="tfofurn">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c27" target="c28">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c29">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c30">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c31">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c32">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c33">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c34">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c35">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c36">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c37">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="c38">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c27" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c27" target="Neutral">
      <data key="d18">0.0475</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c27" target="clownshoesrock">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c28" target="c62">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c28" target="c63">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c28" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c28" target="Positive">
      <data key="d18">0.1794</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c28" target="loamfarer">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c29" target="c64">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c29" target="c65">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c29" target="c66">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c29" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c29" target="Positive">
      <data key="d18">0.6908</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c29" target="bloatedfrog">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c30" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c30" target="Positive">
      <data key="d18">0.6686</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c30" target="bo0mb0om">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c31" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c31" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c31" target="ThePeskyWabbit">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c32" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c32" target="Positive">
      <data key="d18">0.4119</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c32" target="t_bptm">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c33" target="c67">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c33" target="c68">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c33" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c33" target="Positive">
      <data key="d18">0.0694</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c33" target="SuperGameTheory">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c34" target="c69">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c34" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c34" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c34" target="c3534l">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c35" target="c70">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c35" target="c71">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c35" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c35" target="Positive">
      <data key="d18">0.1764</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c35" target="zck">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c36" target="c72">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c36" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c36" target="Positive">
      <data key="d18">0.1277</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c36" target="hnerixh">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c37" target="c73">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c37" target="c74">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c37" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c37" target="Positive">
      <data key="d18">0.0906</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c37" target="wasimwesley">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c38" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c38" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c38" target="CowboyFromSmell">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c39" target="c40">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c39" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c39" target="Positive">
      <data key="d18">0.1717</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c39" target="TheMasterBaker01">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c40" target="c75">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c40" target="c76">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c40" target="c77">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c40" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c40" target="Positive">
      <data key="d18">0.1806</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c40" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c41" target="c42">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c41" target="c43">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c41" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c41" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c41" target="hypermog">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c42" target="c78">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c42" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c42" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c42" target="mulletlaw">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c43" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c43" target="Positive">
      <data key="d18">0.4019</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c43" target="agumonkey">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c44" target="c45">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c44" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c44" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c44" target="nanodano">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c45" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c45" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c45" target="daviegravee">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c46" target="c47">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c46" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c46" target="Positive">
      <data key="d18">0.2816</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c46" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c47" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c47" target="Positive">
      <data key="d18">0.144</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c47" target="singham">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c48" target="c49">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c48" target="c50">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c48" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c48" target="Positive">
      <data key="d18">0.1137</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c48" target="Dev__">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c49" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c49" target="Positive">
      <data key="d18">0.4201</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c49" target="sheikhy_jake">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c50" target="c79">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c50" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c50" target="Negative">
      <data key="d18">-0.4576</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c50" target="MjrK">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c51" target="c52">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c51" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c51" target="Positive">
      <data key="d18">0.3506</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c51" target="Dustin-">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c52" target="c80">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c52" target="c81">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c52" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c52" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c52" target="ctchalk">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c53" target="c54">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c53" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c53" target="Positive">
      <data key="d18">0.1699</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c53" target="Reddit1990">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c54" target="c82">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c54" target="c83">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c54" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c54" target="Negative">
      <data key="d18">-0.2248</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c54" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c55" target="c56">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c55" target="c57">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c55" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c55" target="Negative">
      <data key="d18">-0.3412</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c55" target="ocean07">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c56" target="c84">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c56" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c56" target="Neutral">
      <data key="d18">-0.0095</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c56" target="mistahspecs">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c57" target="c85">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c57" target="c86">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c57" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c57" target="Negative">
      <data key="d18">-0.247</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c57" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c58" target="c59">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c58" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c58" target="Neutral">
      <data key="d18">0.018</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c58" target="znegva">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c59" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c59" target="Negative">
      <data key="d18">-0.2263</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c59" target="znegva">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c60" target="c61">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c60" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c60" target="Positive">
      <data key="d18">0.0709</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c60" target="CowboyFromSmell">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c61" target="c87">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c61" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c61" target="Positive">
      <data key="d18">0.1399</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c61" target="Putnam3145">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c62" target="c88">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c62" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c62" target="Negative">
      <data key="d18">-0.1033</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c62" target="TKAAZ">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c63" target="c89">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c63" target="c90">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c63" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c63" target="Neutral">
      <data key="d18">0.0399</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c63" target="sheikhy_jake">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c64" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c64" target="Positive">
      <data key="d18">0.0773</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c64" target="SirClueless">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c65" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c65" target="Negative">
      <data key="d18">-0.1396</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c65" target="MjrK">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c66" target="c91">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c66" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c66" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c66" target="voidmechanic">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c67" target="c92">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c67" target="c93">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c67" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c67" target="Positive">
      <data key="d18">0.067</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c67" target="timshoaf">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c68" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c68" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c68" target="knot_hk">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c69" target="c94">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c69" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c69" target="Positive">
      <data key="d18">0.2144</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c69" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c70" target="c95">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c70" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c70" target="Positive">
      <data key="d18">0.2732</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c70" target="trex-eaterofcadrs">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c71" target="c96">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c71" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c71" target="Positive">
      <data key="d18">0.1815</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c71" target="Little_Milton">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c72" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c72" target="Positive">
      <data key="d18">0.2722</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c72" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c73" target="c97">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c73" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c73" target="Positive">
      <data key="d18">0.134</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c73" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c74" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c74" target="Positive">
      <data key="d18">0.2771</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c74" target="barsoap">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c75" target="c98">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c75" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c75" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c75" target="krimin_killr21">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c76" target="c99">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c76" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c76" target="Positive">
      <data key="d18">0.4581</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c76" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c77" target="c100">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c77" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c77" target="Positive">
      <data key="d18">0.4586</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c77" target="khedoros">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c78" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c78" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c78" target="technocapital">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c79" target="c101">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c79" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c79" target="Positive">
      <data key="d18">0.5574</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c79" target="Dev__">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c80" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c80" target="Neutral">
      <data key="d18">0.0051</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c80" target="EldritchSundae">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c81" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c81" target="Positive">
      <data key="d18">0.4404</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c81" target="Kaon_Particle">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c82" target="c102">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c82" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c82" target="Positive">
      <data key="d18">0.0999</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c82" target="Reddit1990">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c83" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c83" target="Negative">
      <data key="d18">-0.0929</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c83" target="WikiTextBot">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c84" target="c103">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c84" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c84" target="Positive">
      <data key="d18">0.1875</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c84" target="Oriumpor">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c85" target="c104">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c85" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c85" target="Positive">
      <data key="d18">0.125</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c85" target="richardathome">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c86" target="c105">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c86" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c86" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c86" target="Oriumpor">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c87" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c87" target="Neutral">
      <data key="d18">-0.0388</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c87" target="CowboyFromSmell">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c88" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c88" target="Positive">
      <data key="d18">0.0682</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c88" target="loamfarer">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c89" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c89" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c89" target="umpc">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c90" target="c106">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c90" target="c107">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c90" target="c108">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c90" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c90" target="Positive">
      <data key="d18">0.068</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c90" target="pilotInPyjamas">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c91" target="c109">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c91" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c91" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c91" target="stringParameter">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c92" target="c110">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c92" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c92" target="Positive">
      <data key="d18">0.1739</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c92" target="SuperGameTheory">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c93" target="c111">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c93" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c93" target="Negative">
      <data key="d18">-0.1531</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c93" target="dancorbe">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c94" target="c112">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c94" target="c113">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c94" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c94" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c94" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c95" target="c114">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c95" target="c115">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c95" target="c116">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c95" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c95" target="Negative">
      <data key="d18">-0.34</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c95" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c96" target="c117">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c96" target="c118">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c96" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c96" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c96" target="sn0rrlax">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c97" target="c119">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c97" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c97" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c97" target="Anonymous">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c98" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c98" target="Positive">
      <data key="d18">0.3042</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c98" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c99" target="c120">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c99" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c99" target="Positive">
      <data key="d18">0.2563</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c99" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c100" target="c121">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c100" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c100" target="Positive">
      <data key="d18">0.3182</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c100" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c101" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c101" target="Positive">
      <data key="d18">0.1626</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c101" target="MjrK">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c102" target="c122">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c102" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c102" target="Positive">
      <data key="d18">0.2021</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c102" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c103" target="c123">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c103" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c103" target="Positive">
      <data key="d18">0.2561</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c103" target="mistahspecs">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c104" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c104" target="Positive">
      <data key="d18">0.5442</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c104" target="p_pistol">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c105" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c105" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c105" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c106" target="c124">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c106" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c106" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c106" target="sheikhy_jake">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c107" target="c125">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c107" target="c126">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c107" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c107" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c107" target="Alaskan_Thunder">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c108" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c108" target="Negative">
      <data key="d18">-0.34</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c108" target="TKAAZ">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c109" target="c127">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c109" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c109" target="Negative">
      <data key="d18">-0.052</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c109" target="voidmechanic">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c110" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c110" target="Positive">
      <data key="d18">0.3986</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c110" target="timshoaf">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c111" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c111" target="Positive">
      <data key="d18">0.1197</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c111" target="timshoaf">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c112" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c112" target="Positive">
      <data key="d18">0.5382</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c112" target="nupogodi">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c113" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c113" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c113" target="nemec">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c114" target="c128">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c114" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c114" target="Positive">
      <data key="d18">0.1056</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c114" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c115" target="c129">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c115" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c115" target="Positive">
      <data key="d18">0.3954</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c115" target="revereddesecration">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c116" target="c130">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c116" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c116" target="Positive">
      <data key="d18">0.0815</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c116" target="rhorama">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c117" target="c131">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c117" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c117" target="Positive">
      <data key="d18">0.1646</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c117" target="_georgesim_">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c118" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c118" target="Negative">
      <data key="d18">-0.4939</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c118" target="Little_Milton">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c119" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c119" target="Positive">
      <data key="d18">0.051</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c119" target="WikiTextBot">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c120" target="c132">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c120" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c120" target="Neutral">
      <data key="d18">0.0486</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c120" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c121" target="c133">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c121" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c121" target="Positive">
      <data key="d18">0.0971</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c121" target="khedoros">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c122" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c122" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c122" target="singham">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c123" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c123" target="Positive">
      <data key="d18">0.1844</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c123" target="Oriumpor">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c124" target="c134">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c124" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c124" target="Positive">
      <data key="d18">0.139</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c124" target="pilotInPyjamas">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c125" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c125" target="Positive">
      <data key="d18">0.5499</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c125" target="singham">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c126" target="c135">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c126" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c126" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c126" target="pilotInPyjamas">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c127" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c127" target="Negative">
      <data key="d18">-0.1366</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c127" target="stringParameter">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c128" target="c136">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c128" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c128" target="Neutral">
      <data key="d18">0.0328</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c128" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c129" target="c137">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c129" target="c138">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c129" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c129" target="Positive">
      <data key="d18">0.2573</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c129" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c130" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c130" target="Negative">
      <data key="d18">-0.0903</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c130" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c131" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c131" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c131" target="sn0rrlax">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c132" target="c139">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c132" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c132" target="Neutral">
      <data key="d18">0.0079</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c132" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c133" target="c140">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c133" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c133" target="Negative">
      <data key="d18">-0.4404</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c133" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c134" target="c141">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c134" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c134" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c134" target="TKAAZ">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c135" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c135" target="Positive">
      <data key="d18">0.4019</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c135" target="Alaskan_Thunder">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c136" target="c142">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c136" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c136" target="Negative">
      <data key="d18">-0.0726</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c136" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c137" target="c143">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c137" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c137" target="Positive">
      <data key="d18">0.4246</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c137" target="revereddesecration">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c138" target="c144">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c138" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c138" target="Positive">
      <data key="d18">0.1074</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c138" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c139" target="c145">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c139" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c139" target="Negative">
      <data key="d18">-0.0664</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c139" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c140" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c140" target="Neutral">
      <data key="d18">-0.035</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c140" target="khedoros">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c141" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c141" target="Positive">
      <data key="d18">0.2779</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c141" target="pilotInPyjamas">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c142" target="c146">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c142" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c142" target="Neutral">
      <data key="d18">0.0486</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c142" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c143" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c143" target="Positive">
      <data key="d18">0.6369</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c143" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c144" target="c147">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c144" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c144" target="Positive">
      <data key="d18">0.1366</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c144" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c145" target="c148">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c145" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c145" target="Neutral">
      <data key="d18">-0.0064</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c145" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c146" target="c149">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c146" target="c150">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c146" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c146" target="Neutral">
      <data key="d18">0.0426</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c146" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c147" target="c151">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c147" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c147" target="Negative">
      <data key="d18">-0.1908</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c147" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c148" target="c152">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c148" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c148" target="Positive">
      <data key="d18">0.2237</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c148" target="olliej">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c149" target="c153">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c149" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c149" target="Negative">
      <data key="d18">-0.0803</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c149" target="DerSkagg">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c150" target="c154">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c150" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c150" target="Positive">
      <data key="d18">0.1484</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c150" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c151" target="c155">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c151" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c151" target="Positive">
      <data key="d18">0.0738</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c151" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c152" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c152" target="Positive">
      <data key="d18">0.1595</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c152" target="Sukrim">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c153" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c153" target="Negative">
      <data key="d18">-0.0894</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c153" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c154" target="c156">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c154" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c154" target="Positive">
      <data key="d18">0.3399</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c154" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c155" target="c157">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c155" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c155" target="Negative">
      <data key="d18">-0.1144</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c155" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c156" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c156" target="Positive">
      <data key="d18">0.1273</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c156" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c157" target="c158">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c157" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c157" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c157" target="Anonymous">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c158" target="c159">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c158" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c158" target="Negative">
      <data key="d18">-0.2024</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c158" target="hackingdreams">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c159" target="c160">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c159" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c159" target="Neutral">
      <data key="d18">-0.0192</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c159" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c160" target="c161">
      <data key="d17">parent-child</data>
    </edge>
    <edge source="c160" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c160" target="Negative">
      <data key="d18">-0.1035</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c160" target="rhorama">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c161" target="ar213">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c161" target="Positive">
      <data key="d18">0.0694</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c161" target="ebolanurse">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar162" target="c163">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar162" target="c164">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar162" target="c165">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar162" target="c166">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar162" target="c167">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar162" target="c168">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c163" target="Negative">
      <data key="d18">-0.128</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c163" target="eternusvia">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c164" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c164" target="flexibeast">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c165" target="Negative">
      <data key="d18">-0.0953</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c165" target="almostinvisible">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c166" target="Negative">
      <data key="d18">-0.1337</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c166" target="wakka54">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c167" target="Positive">
      <data key="d18">0.3224</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c167" target="bradcroteau">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c168" target="Positive">
      <data key="d18">0.1624</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c168" target="Andy_Reds">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar169" target="c170">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c170" target="Neutral">
      <data key="d18">0.0264</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c170" target="MemesEngineer">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar171" target="c172">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar171" target="c173">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c172" target="Positive">
      <data key="d18">0.2875</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c172" target="cristianontivero">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c173" target="Positive">
      <data key="d18">0.4927</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c173" target="nakayamakai88">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar175" target="c176">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar175" target="c177">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c176" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c176" target="fnovd">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c177" target="Positive">
      <data key="d18">0.1061</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c177" target="reasonably_plausible">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar178" target="c179">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c179" target="Positive">
      <data key="d18">0.0772</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c179" target="Vityou">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar180" target="c181">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c181" target="Positive">
      <data key="d18">0.2666</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c181" target="krum">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar182" target="c183">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c184">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c185">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c186">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c187">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c188">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c189">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c190">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c191">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c192">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c193">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c194">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c195">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c196">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c197">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c198">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar182" target="c199">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c183" target="Positive">
      <data key="d18">0.4443</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c183" target="coterminous_regret">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c184" target="Negative">
      <data key="d18">-0.0563</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c184" target="practicalutilitarian">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c185" target="Negative">
      <data key="d18">-0.1081</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c185" target="helpfulsj">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c186" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c186" target="SideburnsOfDoom">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c187" target="Positive">
      <data key="d18">0.1321</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c187" target="knot_hk">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c188" target="Positive">
      <data key="d18">0.0958</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c188" target="slashcom">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c189" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c189" target="scottyler89">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c190" target="Positive">
      <data key="d18">0.1192</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c190" target="postisapostisapost">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c191" target="Positive">
      <data key="d18">0.1119</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c191" target="shponglespore">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c192" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c192" target="hashestohashes">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c193" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c193" target="beeskness420">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c194" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c194" target="pacmanrva">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c195" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c195" target="Carpetfizz">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c196" target="Neutral">
      <data key="d18">0.0123</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c196" target="TheCriticalSkeptic">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c197" target="Positive">
      <data key="d18">0.1196</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c197" target="laerien">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c198" target="Positive">
      <data key="d18">0.3062</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c198" target="ShadyDaDev">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c199" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c199" target="fearsneakta">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar200" target="c201">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar200" target="c202">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c201" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c201" target="xShadowProclamationx">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c202" target="Positive">
      <data key="d18">0.0808</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c202" target="IdiocyInAction">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar204" target="c205">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar204" target="c206">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar204" target="c207">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar204" target="c208">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar204" target="c209">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar204" target="c210">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c205" target="Positive">
      <data key="d18">0.474</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c205" target="llN3M3515ll">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c206" target="Neutral">
      <data key="d18">0.0499</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c206" target="type1advocate">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c207" target="Positive">
      <data key="d18">0.5423</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c207" target="ogre14t">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c208" target="Positive">
      <data key="d18">0.3431</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c208" target="LongjumpingEnergy">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c209" target="Positive">
      <data key="d18">0.668</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c209" target="insburgnis">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c210" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c210" target="mcandre">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar211" target="c212">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c212" target="Positive">
      <data key="d18">0.4404</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c212" target="Andy_Reds">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="ar213" target="c214">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c215">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c216">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c217">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c218">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c219">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c220">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c221">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c222">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c223">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c224">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c225">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c226">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c227">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c228">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c229">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c230">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c231">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c232">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c233">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c234">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c235">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c236">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c237">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c238">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c239">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c240">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c241">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="ar213" target="c242">
      <data key="d17">article-comment</data>
    </edge>
    <edge source="c214" target="Neutral">
      <data key="d18">0.0377</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c214" target="p_pistol">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c215" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c215" target="alvahrow">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c216" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c216" target="spacemoses">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c217" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c217" target="ralphredosoprano">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c218" target="Positive">
      <data key="d18">0.1366</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c218" target="cpdean">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c219" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c219" target="SteeleDynamics">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c220" target="Positive">
      <data key="d18">0.1591</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c220" target="almostinvisible">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c221" target="Positive">
      <data key="d18">0.2139</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c221" target="macnlz">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c222" target="Positive">
      <data key="d18">0.6124</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c222" target="wannagetbaked">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c223" target="Negative">
      <data key="d18">-0.09</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c223" target="teawreckshero">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c224" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c224" target="tsvk">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c225" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c225" target="brett_riverboat">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c226" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c226" target="agumonkey">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c227" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c227" target="Laafheid">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c228" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c228" target="superjimmyplus">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c229" target="Positive">
      <data key="d18">0.0881</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c229" target="MjrK">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c230" target="Positive">
      <data key="d18">0.4215</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c230" target="taratoni">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c231" target="Positive">
      <data key="d18">0.2202</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c231" target="I_edit_comments_bad">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c232" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c232" target="pandasashu">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c233" target="Negative">
      <data key="d18">-0.4391</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c233" target="Kulhu">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c234" target="Neutral">
      <data key="d18">0.0455</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c234" target="fourdebt">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c235" target="Negative">
      <data key="d18">-0.1274</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c235" target="generic12345689">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c236" target="Positive">
      <data key="d18">0.1063</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c236" target="Causative">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c237" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c237" target="roscoe_e_roscoe">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c238" target="Neutral">
      <data key="d18">0.0</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c238" target="voneger">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c239" target="Negative">
      <data key="d18">-0.1746</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c239" target="TheoreticalFunk">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c240" target="Neutral">
      <data key="d18">-0.0253</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c240" target="djimbob">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c241" target="Neutral">
      <data key="d18">-0.0011</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c241" target="Veedrac">
      <data key="d17">author-comment</data>
    </edge>
    <edge source="c242" target="Positive">
      <data key="d18">0.142</data>
      <data key="d17">sentiment-comment</data>
    </edge>
    <edge source="c242" target="NowImAllSet">
      <data key="d17">author-comment</data>
    </edge>
  </graph>
</graphml>
